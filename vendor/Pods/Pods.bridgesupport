<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingErrorDomain'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationDidFinishNotification'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationDidStartNotification'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLRequestErrorKey'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLResponseErrorKey'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingReachabilityDidChangeNotification'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingReachabilityNotificationStatusItem'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFAttribute'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFCalendarDate'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFDatatype'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFDomainKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKeyedArchive'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKeys'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFMemoryDatabase'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNanoObjectBehaviorException'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSFNanoStoreErrorKey' type64='q'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNanoStoreUnableToManipulateStoreException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNonConformingNanoObjectProtocolException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFObjectClass'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_ColumnIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_DatatypeIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_FullDatatypeIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_SchemaTable'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_TableIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFRowIDColumnName'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFTemporaryDatabase'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFUnexpectedParameterException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFValue'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFValues'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFVersionKey'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSF_Private_InvalidParameterDataCodeKey' type64='q'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSF_Private_MacOSXErrorCodeKey' type64='q'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFKeyedArchive'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFObjectKeys'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_Name'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFAttribute'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFValue'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_ToDeleteTableKey'/>
<constant const='true' declared_type='NSTimeInterval' type='d' name='kAFUploadStream3GSuggestedDelay'/>
<constant const='true' declared_type='NSUInteger' type='I' name='kAFUploadStream3GSuggestedPacketSize' type64='Q'/>
<constant const='true' declared_type='NSString*' type='@' name='kReachabilityChangedNotification'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='0' name='AFNetworkReachabilityStatusNotReachable'/>
<enum value='1' name='AFNetworkReachabilityStatusReachableViaWWAN'/>
<enum value='2' name='AFNetworkReachabilityStatusReachableViaWiFi'/>
<enum value='-1' name='AFNetworkReachabilityStatusUnknown'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='2' name='AFSSLPinningModeCertificate'/>
<enum value='0' name='AFSSLPinningModeNone'/>
<enum value='1' name='AFSSLPinningModePublicKey'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_AFNetworking'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_CocoaLumberjack'/>
<enum value='1' name='COCOAPODS_VERSION_MAJOR_NSData_MD5Digest'/>
<enum value='2' name='COCOAPODS_VERSION_MAJOR_NanoStore'/>
<enum value='3' name='COCOAPODS_VERSION_MAJOR_Reachability'/>
<enum value='2' name='COCOAPODS_VERSION_MINOR_AFNetworking'/>
<enum value='6' name='COCOAPODS_VERSION_MINOR_CocoaLumberjack'/>
<enum value='0' name='COCOAPODS_VERSION_MINOR_NSData_MD5Digest'/>
<enum value='6' name='COCOAPODS_VERSION_MINOR_NanoStore'/>
<enum value='1' name='COCOAPODS_VERSION_MINOR_Reachability'/>
<enum value='1' name='COCOAPODS_VERSION_PATCH_AFNetworking'/>
<enum value='2' name='COCOAPODS_VERSION_PATCH_CocoaLumberjack'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_NSData_MD5Digest'/>
<enum value='4' name='COCOAPODS_VERSION_PATCH_NanoStore'/>
<enum value='0' name='COCOAPODS_VERSION_PATCH_Reachability'/>
<enum value='1' name='CacheAllData'/>
<enum value='2' name='CacheDataOnDemand'/>
<enum value='1' name='DDLogMessageCopyFile'/>
<enum value='2' name='DDLogMessageCopyFunction'/>
<enum value='1048576' name='DEFAULT_LOG_MAX_FILE_SIZE'/>
<enum value='5' name='DEFAULT_LOG_MAX_NUM_LOG_FILES'/>
<enum value='86400' name='DEFAULT_LOG_ROLLING_FREQUENCY'/>
<enum value='3' name='DoNotCacheData'/>
<enum value='0' name='JournalModeDelete'/>
<enum value='3' name='JournalModeMemory'/>
<enum value='5' name='JournalModeOFF'/>
<enum value='2' name='JournalModePersist'/>
<enum value='1' name='JournalModeTruncate'/>
<enum value='4' name='JournalModeWAL'/>
<enum value='1' name='LOG_ASYNC_ENABLED'/>
<enum value='0' name='LOG_ASYNC_ERROR'/>
<enum value='1' name='LOG_ASYNC_INFO'/>
<enum value='1' name='LOG_ASYNC_VERBOSE'/>
<enum value='1' name='LOG_ASYNC_WARN'/>
<enum value='1' name='LOG_FLAG_ERROR'/>
<enum value='4' name='LOG_FLAG_INFO'/>
<enum value='8' name='LOG_FLAG_VERBOSE'/>
<enum value='2' name='LOG_FLAG_WARN'/>
<enum value='1' name='LOG_LEVEL_ERROR'/>
<enum value='7' name='LOG_LEVEL_INFO'/>
<enum value='0' name='LOG_LEVEL_OFF'/>
<enum value='15' name='LOG_LEVEL_VERBOSE'/>
<enum value='3' name='LOG_LEVEL_WARN'/>
<enum value='0' name='NEEDS_DISPATCH_RETAIN_RELEASE'/>
<enum value='3' name='NSFAfterDate'/>
<enum value='1' name='NSFAnd'/>
<enum value='2' name='NSFAttributeColumn'/>
<enum value='1' name='NSFAverage'/>
<enum value='1' name='NSFBeforeDate'/>
<enum value='1' name='NSFBeginsWith'/>
<enum value='2' name='NSFContains'/>
<enum value='2' name='NSFCount'/>
<enum value='2' name='NSFEncodingUTF16'/>
<enum value='1' name='NSFEncodingUTF8'/>
<enum value='3' name='NSFEncodingUnknown'/>
<enum value='3' name='NSFEndsWith'/>
<enum value='1' name='NSFEngineProcessingDefaultMode'/>
<enum value='2' name='NSFEngineProcessingFastMode'/>
<enum value='0' name='NSFEqualTo'/>
<enum value='8' name='NSFGreaterThan'/>
<enum value='5' name='NSFInsensitiveBeginsWith'/>
<enum value='6' name='NSFInsensitiveContains'/>
<enum value='7' name='NSFInsensitiveEndsWith'/>
<enum value='4' name='NSFInsensitiveEqualTo'/>
<enum value='1' name='NSFKeyColumn'/>
<enum value='9' name='NSFLessThan'/>
<enum value='3' name='NSFMax'/>
<enum value='1' name='NSFMemoryStoreType'/>
<enum value='4' name='NSFMin'/>
<enum value='1' name='NSFNanoTypeData'/>
<enum value='3' name='NSFNanoTypeDate'/>
<enum value='5' name='NSFNanoTypeNULL'/>
<enum value='4' name='NSFNanoTypeNumber'/>
<enum value='0' name='NSFNanoTypeRowUID'/>
<enum value='2' name='NSFNanoTypeString'/>
<enum value='6' name='NSFNanoTypeURL'/>
<enum value='-1' name='NSFNanoTypeUnknown'/>
<enum value='10' name='NSFNotEqualTo'/>
<enum value='2' name='NSFOnDate'/>
<enum value='2' name='NSFOr'/>
<enum value='3' name='NSFPersistentStoreType'/>
<enum value='2' name='NSFReturnKeys'/>
<enum value='1' name='NSFReturnObjects'/>
<enum value='2' name='NSFTemporaryStoreType'/>
<enum value='5' name='NSFTotal'/>
<enum value='3' name='NSFValueColumn'/>
<enum value='0' name='NotReachable'/>
<enum value='1' name='ReachableViaWWAN'/>
<enum value='2' name='ReachableViaWiFi'/>
<enum value='2' name='SynchronousModeFull'/>
<enum value='1' name='SynchronousModeNormal'/>
<enum value='0' name='SynchronousModeOff'/>
<enum value='0' name='TempStoreModeDefault'/>
<enum value='1' name='TempStoreModeFile'/>
<enum value='2' name='TempStoreModeMemory'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='parameters'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' type64='Q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='DDExtractFileNameWithoutExtension'>
<arg const='true' declared_type='char*' type='*' name='filePath'/>
<arg declared_type='BOOL' type='B' name='copy'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg declared_type='NSString*' type='@' name='aNanoDatatype'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg declared_type='BOOL' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg declared_type='NSFMatchType' type='i' name='aMatchType'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg declared_type='NSFNanoDatatype' type='i' name='aNanoDatatype'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='safeJSONArrayFromArray'>
<arg declared_type='NSArray*' type='@' name='array'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='safeJSONDictionaryFromDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='safeJSONObjectFromObject'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='1' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='2' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='defaultValueForHeader:'>
<arg declared_type='NSString*' index='0' type='@' name='header'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' type='@' name='operations'/>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' index='1' type='@?' name='progressBlock'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSArray *)' index='2' type='@?' name='completionBlock'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' type='@' name='urlRequests'/>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' index='1' type='@?' name='progressBlock'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSArray *)' index='2' type='@?' name='completionBlock'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg declared_type='AFHTTPRequestOperation*' index='0' type='@' name='operation'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(id)' index='3' type='@?' name='block'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='1' type='@' name='parameters'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='2' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg declared_type='Class' index='0' type='#' name='operationClass'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg declared_type='NSString*' index='0' type='@' name='method'/>
<arg declared_type='NSString*' index='1' type='@' name='path'/>
<arg declared_type='NSDictionary*' index='2' type='@' name='parameters'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' index='0' type='B' name='allowsInvalidSSLCertificate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg declared_type='NSString*' index='0' type='@' name='token'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg declared_type='NSString*' index='0' type='@' name='username'/>
<arg declared_type='NSString*' index='1' type='@' name='password'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg declared_type='NSURLCredential*' index='0' type='@' name='credential'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg declared_type='NSString*' index='0' type='@' name='header'/>
<arg declared_type='NSString*' index='1' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg declared_type='AFURLConnectionOperationSSLPinningMode' index='0' type='i' name='defaultSSLPinningMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg declared_type='AFHTTPClientParameterEncoding' index='0' type='i' name='parameterEncoding'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg function_pointer='true' declared_type='void (^)(AFNetworkReachabilityStatus)' index='0' type='@?' name='block'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' type='I' name='stringEncoding' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg declared_type='Class' index='0' type='#' name='operationClass'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='addAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' type='@' name='contentTypes'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' type='@' name='statusCodes'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' index='0' type='@?' name='success'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' index='1' type='@?' name='failure'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='failureCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' index='0' type='@' name='successCallbackQueue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='UIImage *(^)(UIImage *)' index='1' type='@?' name='imageProcessingBlock'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' index='2' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='void (^)(UIImage *)' index='1' type='@?' name='success'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' type='f' name='imageScale' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' index='1' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' index='2' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' type='I' name='JSONReadingOptions' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' index='1' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' index='2' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' type='I' name='propertyListReadOptions' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' index='0' type='B' name='allowsInvalidSSLCertificate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg function_pointer='true' declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)' index='0' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLProtectionSpace*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' index='0' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg function_pointer='true' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' index='0' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' type='@' name='credential'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' index='0' type='@?' name='block'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' type='@' name='inputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' type='@' name='outputStream'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg function_pointer='true' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' index='0' type='@?' name='block'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' type='@' name='runLoopModes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg declared_type='AFURLConnectionOperationSSLPinningMode' index='0' type='i' name='SSLPinningMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg function_pointer='true' declared_type='void (^)(void)' index='0' type='@?' name='handler'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' type='B' name='shouldUseCredentialStorage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' index='0' type='@?' name='block'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='userInfo'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' index='1' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' index='2' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='ContextBlacklistFilterLogFormatter'>
<method selector='addToBlacklist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='blacklist'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOnBlacklist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeFromBlacklist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ContextWhitelistFilterLogFormatter'>
<method selector='addToWhitelist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOnWhitelist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeFromWhitelist:'>
<arg declared_type='int' index='0' type='i' name='loggingContext'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='whitelist'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='DDASLLogger'>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='DDASLLogger*' type='@'/>
</method>
</class>
<class name='DDAbstractDatabaseLogger'>
<method selector='deleteInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='deleteOldLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOnEverySave'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAge'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='savePendingLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveThreshold'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setDeleteInterval:'>
<arg declared_type='NSTimeInterval' index='0' type='d' name='deleteInterval'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteOnEverySave:'>
<arg declared_type='BOOL' index='0' type='B' name='deleteOnEverySave'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAge:'>
<arg declared_type='NSTimeInterval' index='0' type='d' name='maxAge'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSTimeInterval' index='0' type='d' name='saveInterval'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveThreshold:'>
<arg declared_type='NSUInteger' index='0' type='I' name='saveThreshold' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDAbstractLogger'>
<method selector='isOnGlobalLoggingQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnInternalLoggerQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg declared_type='id' index='0' type='@' name='formatter'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDFileLogger'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogFileManager:'>
<arg declared_type='id' index='0' type='@' name='logFileManager'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFileManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumFileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='rollLogFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollingFrequency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setLogFileManager:'>
<arg declared_type='id' index='0' type='@' name='logFileManager'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFileSize:'>
<arg declared_type='unsigned long long' index='0' type='Q' name='maximumFileSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFrequency:'>
<arg declared_type='NSTimeInterval' index='0' type='d' name='rollingFrequency'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLog'>
<method class_method='true' selector='addLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='flushLog'>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' class_method='true' selector='log:level:flag:context:file:function:line:tag:format:'>
<arg declared_type='BOOL' index='0' type='B' name='synchronous'/>
<arg declared_type='int' index='1' type='i' name='level'/>
<arg declared_type='int' index='2' type='i' name='flag'/>
<arg declared_type='int' index='3' type='i' name='context'/>
<arg const='true' declared_type='char*' index='4' type='*' name='file'/>
<arg const='true' declared_type='char*' index='5' type='*' name='function'/>
<arg declared_type='int' index='6' type='i' name='line'/>
<arg declared_type='id' index='7' type='@' name='tag'/>
<arg printf_format='true' declared_type='NSString*' index='8' type='@' name='format'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='log:level:flag:context:file:function:line:tag:format:args:'>
<arg declared_type='BOOL' index='0' type='B' name='asynchronous'/>
<arg declared_type='int' index='1' type='i' name='level'/>
<arg declared_type='int' index='2' type='i' name='flag'/>
<arg declared_type='int' index='3' type='i' name='context'/>
<arg const='true' declared_type='char*' index='4' type='*' name='file'/>
<arg const='true' declared_type='char*' index='5' type='*' name='function'/>
<arg declared_type='int' index='6' type='i' name='line'/>
<arg declared_type='id' index='7' type='@' name='tag'/>
<arg declared_type='NSString*' index='8' type='@' name='format'/>
<arg declared_type64='__va_list_tag*' declared_type='va_list' index='9' type='*' name='argList' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='logLevelForClass:'>
<arg declared_type='Class' index='0' type='#' name='aClass'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='logLevelForClassWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='aClassName'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='loggingQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method class_method='true' selector='registeredClassNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='registeredClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='removeAllLoggers'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLogLevel:forClass:'>
<arg declared_type='int' index='0' type='i' name='logLevel'/>
<arg declared_type='Class' index='1' type='#' name='aClass'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLogLevel:forClassWithName:'>
<arg declared_type='int' index='0' type='i' name='logLevel'/>
<arg declared_type='NSString*' index='1' type='@' name='aClassName'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileFormatterDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg declared_type='NSDateFormatter*' index='0' type='@' name='dateFormatter'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogFileInfo'>
<method selector='addExtensionAttributeWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='attrName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='age'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='creationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='hasExtensionAttributeWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='attrName'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFilePath:'>
<arg declared_type='NSString*' index='0' type='@' name='filePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='logFileWithPath:'>
<arg declared_type='NSString*' index='0' type='@' name='filePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='removeExtensionAttributeWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='attrName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameFile:'>
<arg declared_type='NSString*' index='0' type='@' name='newFileName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseCompareByCreationDate:'>
<arg declared_type='DDLogFileInfo*' index='0' type='@' name='another'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='reverseCompareByModificationDate:'>
<arg declared_type='DDLogFileInfo*' index='0' type='@' name='another'/>
<retval declared_type='NSComparisonResult' type='i' type64='q'/>
</method>
<method selector='setCreationDate:'>
<arg declared_type='NSDate*' index='0' type='@' name='creationDate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileAttributes:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='fileAttributes'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg declared_type='NSString*' index='0' type='@' name='fileName'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg declared_type='NSString*' index='0' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsArchived:'>
<arg declared_type='BOOL' index='0' type='B' name='isArchived'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg declared_type='NSDate*' index='0' type='@' name='modificationDate'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileManagerDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogsDirectory:'>
<arg declared_type='NSString*' index='0' type='@' name='logsDirectory'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogMessage'>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLogMsg:level:flag:context:file:function:line:tag:options:'>
<arg declared_type='NSString*' index='0' type='@' name='logMsg'/>
<arg declared_type='int' index='1' type='i' name='logLevel'/>
<arg declared_type='int' index='2' type='i' name='logFlag'/>
<arg declared_type='int' index='3' type='i' name='logContext'/>
<arg const='true' declared_type='char*' index='4' type='*' name='file'/>
<arg const='true' declared_type='char*' index='5' type='*' name='function'/>
<arg declared_type='int' index='6' type='i' name='line'/>
<arg declared_type='id' index='7' type='@' name='tag'/>
<arg declared_type='DDLogMessageOptions' index='8' type='i' name='optionsMask'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='threadID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='DDTTYLogger'>
<method selector='clearAllColors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllFlags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllTags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:'>
<arg declared_type='int' index='0' type='i' name='mask'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:context:'>
<arg declared_type='int' index='0' type='i' name='mask'/>
<arg declared_type='int' index='1' type='i' name='context'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForTag:'>
<arg declared_type='id' index='0' type='@' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colorsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setColorsEnabled:'>
<arg declared_type='BOOL' index='0' type='B' name='colorsEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:'>
<arg declared_type='UIColor*' index='0' type='@' name='txtColor'/>
<arg declared_type='UIColor*' index='1' type='@' name='bgColor'/>
<arg declared_type='int' index='2' type='i' name='mask'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:context:'>
<arg declared_type='UIColor*' index='0' type='@' name='txtColor'/>
<arg declared_type='UIColor*' index='1' type='@' name='bgColor'/>
<arg declared_type='int' index='2' type='i' name='mask'/>
<arg declared_type='int' index='3' type='i' name='ctxt'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forTag:'>
<arg declared_type='UIColor*' index='0' type='@' name='txtColor'/>
<arg declared_type='UIColor*' index='1' type='@' name='bgColor'/>
<arg declared_type='id' index='2' type='@' name='tag'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='DDTTYLogger*' type='@'/>
</method>
</class>
<class name='DispatchQueueLogFormatter'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxQueueLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='minQueueLength'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='replacementStringForQueueLabel:'>
<arg declared_type='NSString*' index='0' type='@' name='longLabel'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setMaxQueueLength:'>
<arg declared_type='NSUInteger' index='0' type='I' name='maxQueueLength' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinQueueLength:'>
<arg declared_type='NSUInteger' index='0' type='I' name='minQueueLength' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReplacementString:forQueueLabel:'>
<arg declared_type='NSString*' index='0' type='@' name='shortLabel'/>
<arg declared_type='NSString*' index='1' type='@' name='longLabel'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSData'>
<method selector='MD5Digest'>
<retval declared_type='NSData*' type='@'/>
</method>
<method class_method='true' selector='MD5Digest:'>
<arg declared_type='NSData*' index='0' type='@' name='input'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='MD5HexDigest'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='MD5HexDigest:'>
<arg declared_type='NSData*' index='0' type='@' name='input'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_inflateObjectsWithKeys:'>
<arg declared_type='NSArray*' index='0' type='@' name='someKeys'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='someStore'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='aStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' index='0' type='@' name='theObject'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='theObjects'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='theName'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg declared_type='NSString*' index='0' type='@' name='theName'/>
<arg declared_type='NSArray*' index='1' type='@' name='theObjects'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg declared_type='NSArray*' index='0' type='@' name='theObjects'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg declared_type='NSString*' index='0' type='@' name='theName'/>
<arg declared_type='NSArray*' index='1' type='@' name='someObjects'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg declared_type='NSFNanoBag*' index='0' type='@' name='otherNanoBag'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id' index='0' type='@' name='theObject'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg declared_type='NSString*' index='0' type='@' name='theObjectKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='theObjects'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='theKeys'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' index='0' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='store'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg declared_type='NSFEncodingType' index='0' type='i' name='value'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg declared_type='NSArray*' index='0' type='@' name='tableColumns'/>
<arg declared_type='NSArray*' index='1' type='@' name='datatypes'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg declared_type='NSString*' index='0' type='@' name='table'/>
<arg declared_type='NSArray*' index='1' type='@' name='tableColumns'/>
<arg declared_type='NSArray*' index='2' type='@' name='tableDatatypes'/>
<arg declared_type='BOOL' index='3' type='B' name='isTemporaryFlag'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg declared_type='NSString*' index='0' type='@' name='tableAndColumn'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg declared_type='NSString*' index='0' type='@' name='table'/>
<arg declared_type='NSString*' index='1' type='@' name='column'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg declared_type='unsigned char*' index='0' type='*' name='dest'/>
<arg const='true' declared_type='char*' index='1' type='*' name='src'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg declared_type='NSArray*' index='0' type='@' name='values'/>
<arg declared_type='NSArray*' index='1' type='@' name='columns'/>
<arg declared_type='NSString*' index='2' type='@' name='table'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg declared_type='NSString*' index='0' type='@' name='column'/>
<arg declared_type='NSString*' index='1' type='@' name='table'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' index='0' type='@' name='prefixedSpace'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg declared_type='NSString*' index='0' type='@' name='tableAndColumn'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' index='0' type='^^{sqlite3_stmt}' name='aStatement'/>
<arg declared_type='NSString*' index='1' type='@' name='aSQLQuery'/>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg declared_type='NSString*' index='0' type='@' name='column'/>
<arg declared_type='NSString*' index='1' type='@' name='table'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg declared_type='NSMutableString*' index='0' type='@' name='theSQLStatement'/>
<arg declared_type='NSArray*' index='1' type='@' name='columns'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg declared_type='NSMutableString*' index='0' type='@' name='theSQLStatement'/>
<arg declared_type='NSArray*' index='1' type='@' name='tags'/>
<arg declared_type='BOOL' index='2' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg declared_type='NSMutableString*' index='0' type='@' name='theSQLStatement'/>
<arg declared_type='NSString*' index='1' type='@' name='table'/>
<arg declared_type='NSArray*' index='2' type='@' name='columns'/>
<arg declared_type='NSArray*' index='3' type='@' name='datatypes'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg declared_type='int' index='0' type='i' name='extendedResult'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg declared_type='NSString*' index='0' type='@' name='tableAndColumn'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg declared_type='NSString*' index='0' type='@' name='value'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg declared_type='NSString*' index='0' type='@' name='aPlist'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg declared_type='NSString*' index='0' type='@' name='theColumn'/>
<arg declared_type='NSString*' index='1' type='@' name='theTable'/>
<arg declared_type='BOOL' index='2' type='B' name='isUnique'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<arg declared_type='NSArray*' index='1' type='@' name='theColumns'/>
<arg declared_type='NSArray*' index='2' type='@' name='theDatatypes'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' index='0' type='@' name='thePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg declared_type='NSString*' index='0' type='@' name='theEncodedData'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg declared_type='NSString*' index='0' type='@' name='theIndex'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg declared_type='NSData*' index='0' type='@' name='theData'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' type='@' name='thePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg declared_type='NSString*' index='0' type='@' name='theTable'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg declared_type='NSFCacheMethod' index='0' type='i' name='theCacheMethod'/>
<arg declared_type='BOOL' index='1' type='B' name='useFastMode'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg declared_type='unsigned int' index='0' type='I' name='theTimeout'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg declared_type='NSFCacheMethod' index='0' type='i' name='cacheMethod'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfPages' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg declared_type='NSFEncodingType' index='0' type='i' name='theEncodingType'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg declared_type='NSFJournalModeMode' index='0' type='i' name='theMode'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfBytes' type64='Q'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg declared_type='NSFSynchronousMode' index='0' type='i' name='theSynchronousMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg declared_type='NSFTempStoreMode' index='0' type='i' name='theTempStoreMode'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addPredicate:withOperator:'>
<arg declared_type='NSFNanoPredicate*' index='0' type='@' name='thePredicate'/>
<arg declared_type='NSFOperator' index='1' type='i' name='theOperator'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayDescription'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' index='0' type='@' name='thePredicate'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' index='0' type='@' name='thePredicate'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_NSObjectToJSONString:error:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<arg declared_type='NSError**' index='1' type='^@' name='error'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_safeArrayFromArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='array'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='_safeDictionaryFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='dictionary'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='_safeObjectFromObject:'>
<arg declared_type='id' index='0' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setOriginalClassString:'>
<arg declared_type='NSString*' index='0' type='@' name='theClassString'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='otherDictionary'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<arg declared_type='NSString*' index='1' type='@' name='theKey'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg declared_type='NSFNanoObject*' index='0' type='@' name='otherNanoObject'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<arg declared_type='NSString*' index='1' type='@' name='theKey'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSString*' index='0' type='@' name='aKey'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg declared_type='NSString*' index='0' type='@' name='aKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg declared_type='NSArray*' index='0' type='@' name='keyArray'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObject:forKey:'>
<arg declared_type='id' index='0' type='@' name='anObject'/>
<arg declared_type='NSString*' index='1' type='@' name='aKey'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='store'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' index='0' type='i' name='theType'/>
<arg declared_type='NSFMatchType' index='1' type='i' name='theMatch'/>
<arg declared_type='id' index='2' type='@' name='theValue'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' index='0' type='i' name='theType'/>
<arg declared_type='NSFMatchType' index='1' type='i' name='theMatch'/>
<arg declared_type='id' index='2' type='@' name='theValue'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='results'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='results'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' index='0' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg declared_type='NSUInteger' index='0' type='I' name='theIndex' type64='Q'/>
<arg declared_type='NSString*' index='1' type='@' name='theColumn'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg declared_type='NSString*' index='0' type='@' name='theColumn'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString*' index='0' type='@' name='thePath'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' index='0' type='@' name='aKey'/>
<arg declared_type='NSString*' index='1' type='@' name='anAttribute'/>
<arg declared_type='NSString*' index='2' type='@' name='aValue'/>
<arg declared_type='NSFMatchType' index='3' type='i' name='match'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg declared_type='NSString*' index='0' type='@' name='aKey'/>
<arg declared_type='NSString*' index='1' type='@' name='anAttribute'/>
<arg declared_type='NSString*' index='2' type='@' name='aValue'/>
<arg declared_type='NSFMatchType' index='3' type='i' name='match'/>
<arg declared_type='NSFReturnType' index='4' type='i' name='returnedObjectType'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg declared_type='NSString*' index='0' type='@' name='keyPath'/>
<arg declared_type='id' index='1' type='@' name='value'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg declared_type='NSArray*' index='0' type='@' name='someExpressions'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' index='0' type='@' name='aKey'/>
<arg declared_type='NSString*' index='1' type='@' name='anAttribute'/>
<arg declared_type='id' index='2' type='@' name='aValue'/>
<arg declared_type='NSFMatchType' index='3' type='i' name='match'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg declared_type='NSArray*' index='0' type='@' name='someKeys'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg declared_type='id' index='0' type='@' name='anAttributeValue'/>
<arg declared_type='NSFMatchType' index='1' type='i' name='match'/>
<arg declared_type='id' index='2' type='@' name='aValue'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg declared_type='NSString*' index='0' type='@' name='aColumn'/>
<arg declared_type='id' index='1' type='@' name='aValue'/>
<arg declared_type='NSFMatchType' index='2' type='i' name='match'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg declared_type='NSArray*' index='0' type='@' name='strings'/>
<arg declared_type='NSString*' index='1' type='@' name='delimiter'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg declared_type='NSFDateMatchType' index='0' type='i' name='aDateMatch'/>
<arg declared_type='NSDate*' index='1' type='@' name='aDate'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='results'/>
<arg declared_type='NSFReturnType' index='1' type='i' name='theReturnType'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg declared_type='NSFAggregateFunctionType' index='0' type='i' name='theFunctionType'/>
<arg declared_type='NSString*' index='1' type='@' name='theAttribute'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<arg declared_type='NSFReturnType' index='1' type='i' name='theReturnType'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='theNanoStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='limit'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg declared_type='NSFDateMatchType' index='0' type='i' name='theDateMatch'/>
<arg declared_type='NSDate*' index='1' type='@' name='theDate'/>
<arg declared_type='NSFReturnType' index='2' type='i' name='theReturnType'/>
<arg type_modifier='o' declared_type='NSError**' index='3' type='^@' name='outError'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg declared_type='NSFReturnType' index='0' type='i' name='theReturnType'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='theNanoStore'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg declared_type='NSString*' index='0' type='@' name='attribute'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg declared_type='NSArray*' index='0' type='@' name='attributesToBeReturned'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBag:'>
<arg declared_type='NSFNanoBag*' index='0' type='@' name='bag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg declared_type='NSArray*' index='0' type='@' name='expressions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg declared_type='NSString*' index='0' type='@' name='filterClass'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg declared_type='BOOL' index='0' type='B' name='groupValues'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' index='0' type='@' name='key'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLimit:'>
<arg declared_type='NSUInteger' index='0' type='I' name='limit' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg declared_type='NSFMatchType' index='0' type='i' name='match'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg declared_type='NSFNanoStore*' index='0' type='@' name='nanoStore'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='NSUInteger' index='0' type='I' name='offset' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg declared_type='NSArray*' index='0' type='@' name='sort'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' index='0' type='@' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg declared_type='NSString*' index='0' type='@' name='theAttribute'/>
<arg declared_type='BOOL' index='1' type='B' name='ascending'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg declared_type='NSString*' index='0' type='@' name='theAttribute'/>
<arg declared_type='BOOL' index='1' type='B' name='ascending'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_NSFDatatypeOfObject:'>
<arg declared_type='id' index='0' type='@' name='value'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='someObjects'/>
<arg declared_type='NSArray*' index='1' type='@' name='someKeys'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='someObjects'/>
<arg declared_type='BOOL' index='1' type='B' name='forceSave'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' index='0' type='@' name='aPath'/>
<arg declared_type='NSString*' index='1' type='@' name='anExtension'/>
<arg declared_type='BOOL' index='2' type='B' name='flag'/>
<arg type_modifier='o' declared_type='NSError**' index='3' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' index='0' type='@' name='aPath'/>
<arg declared_type='NSString*' index='1' type='@' name='anExtension'/>
<arg declared_type='BOOL' index='2' type='B' name='flag'/>
<arg type_modifier='o' declared_type='NSError**' index='3' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg declared_type='id' index='0' type='@' name='aValue'/>
<arg declared_type='NSString*' index='1' type='@' name='anAttribute'/>
<arg declared_type='NSInteger' index='2' type='i' name='aParamNumber' type64='q'/>
<arg declared_type='sqlite3_stmt*' index='3' type='^{sqlite3_stmt=}' name='aStatement'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg declared_type='NSDate*' index='0' type='@' name='aDate'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg declared_type='NSString*' index='0' type='@' name='theSQLStatement'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg declared_type='sqlite3_stmt*' index='0' type='^{sqlite3_stmt=}' name='aStatement'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg declared_type='id' index='0' type='@' name='someObject'/>
<arg declared_type='NSMutableArray**' index='1' type='^@' name='aKeyPath'/>
<arg declared_type='NSMutableArray**' index='2' type='^@' name='someKeys'/>
<arg declared_type='NSMutableArray**' index='3' type='^@' name='someValues'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='info'/>
<arg declared_type='NSMutableArray**' index='1' type='^@' name='flattenedKeys'/>
<arg declared_type='NSMutableArray**' index='2' type='^@' name='flattenedValues'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' index='0' type='@' name='prefixedSpace'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' index='0' type='^^{sqlite3_stmt}' name='aStatement'/>
<arg declared_type='NSString*' index='1' type='@' name='aSQLQuery'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg declared_type='BOOL' index='0' type='B' name='value'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:error:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='someInfo'/>
<arg declared_type='NSString*' index='1' type='@' name='aKey'/>
<arg declared_type='NSString*' index='2' type='@' name='classType'/>
<arg type_modifier='o' declared_type='NSError**' index='3' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg declared_type='id' index='0' type='@' name='aValue'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' index='0' type='@' name='theObject'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='theObjects'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='theName'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg declared_type='NSString*' index='0' type='@' name='theKey'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='theKeys'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithName:'>
<arg declared_type='NSString*' index='0' type='@' name='theName'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg declared_type='NSString*' index='0' type='@' name='theClassName'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg declared_type='NSFNanoStoreType' index='0' type='i' name='theType'/>
<arg declared_type='NSString*' index='1' type='@' name='thePath'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' index='0' type='i' name='theType'/>
<arg declared_type='NSString*' index='1' type='@' name='thePath'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' index='0' type='i' name='theType'/>
<arg declared_type='NSString*' index='1' type='@' name='thePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg declared_type='NSString*' index='0' type='@' name='theClassName'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg declared_type='NSString*' index='0' type='@' name='theClassName'/>
<arg declared_type='NSArray*' index='1' type='@' name='theSortDescriptors'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg declared_type='NSArray*' index='0' type='@' name='theKeys'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg declared_type='id' index='0' type='@' name='theObject'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='theObjects'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg declared_type='NSArray*' index='0' type='@' name='theKeys'/>
<arg type_modifier='o' declared_type='NSError**' index='1' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg type_modifier='o' declared_type='NSError**' index='0' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg declared_type='NSString*' index='0' type='@' name='thePath'/>
<arg declared_type='BOOL' index='1' type='B' name='shouldCompact'/>
<arg type_modifier='o' declared_type='NSError**' index='2' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg declared_type='NSFEngineProcessingMode' index='0' type='i' name='nanoEngineProcessingMode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg declared_type='NSFNanoEngine*' index='0' type='@' name='nanoStoreEngine'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSUInteger' index='0' type='I' name='saveInterval' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg declared_type='id' index='0' type='@' name='anObject'/>
<arg declared_type='id' index='1' type='@' name='aKey'/>
<arg declared_type='NSUInteger' index='2' type='I' name='anIndex' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyAtIndex:'>
<arg declared_type='NSUInteger' index='0' type='I' name='anIndex' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<arg declared_type='NSError**' index='4' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='headers'/>
<arg declared_type='NSData*' index='1' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' type='@' name='inputStream'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='unsigned long long' index='3' type='Q' name='length'/>
<arg declared_type='NSString*' index='4' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='ddLogLevel'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='ddSetLogLevel:'>
<arg declared_type='int' index='0' type='i' name='logLevel'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddToLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didArchiveLogFile:'>
<arg declared_type='NSString*' index='0' type='@' name='logFilePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:'>
<arg declared_type='NSString*' index='0' type='@' name='logFilePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:'>
<arg declared_type='DDLogMessage*' index='0' type='@' name='logMessage'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<arg declared_type='NSString*' index='1' type='@' name='aKey'/>
<arg declared_type='NSFNanoStore*' index='2' type='@' name='theStore'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:'>
<arg declared_type='DDLogMessage*' index='0' type='@' name='logMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg declared_type='id' index='0' type='@' name='formatter'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLogFiles:'>
<arg declared_type='NSUInteger' index='0' type='I' name='maximumNumberOfLogFiles' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfBytes' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='willRemoveFromLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Reachability'>
<method selector='connectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentReachabilityFlags'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currentReachabilityStatus'>
<retval declared_type='NetworkStatus' type='i'/>
</method>
<method selector='currentReachabilityString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithReachabilityRef:'>
<arg declared_type='SCNetworkReachabilityRef' index='0' type='^{__SCNetworkReachability=}' name='ref'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='isConnectionOnDemand'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConnectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterventionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reachabilityFlags'>
<retval declared_type='SCNetworkReachabilityFlags' type='I'/>
</method>
<method class_method='true' selector='reachabilityForInternetConnection'>
<retval declared_type='Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityForLocalWiFi'>
<retval declared_type='Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithAddress:'>
<arg const='true' declared_type='struct sockaddr_in*' index='0' type='^{sockaddr_in=CCS{in_addr=I}[8c]}' name='hostAddress'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method class_method='true' selector='reachabilityWithHostname:'>
<arg declared_type='NSString*' index='0' type='@' name='hostname'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='reachableBlock'>
<retval function_pointer='true' declared_type='NetworkReachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='reachableOnWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setReachableBlock:'>
<arg function_pointer='true' declared_type='NetworkReachable' index='0' type='@?' name='reachableBlock'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachableOnWWAN:'>
<arg declared_type='BOOL' index='0' type='B' name='reachableOnWWAN'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnreachableBlock:'>
<arg function_pointer='true' declared_type='NetworkUnreachable' index='0' type='@?' name='unreachableBlock'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startNotifier'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopNotifier'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unreachableBlock'>
<retval function_pointer='true' declared_type='NetworkUnreachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' type='@' name='url'/>
<arg declared_type='UIImage*' index='1' type='@' name='placeholderImage'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' type='@' name='urlRequest'/>
<arg declared_type='UIImage*' index='1' type='@' name='placeholderImage'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' index='2' type='@?' name='success'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' index='3' type='@?' name='failure'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40' selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32' selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSError**' index='2' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B28@0:4@8@12@16@20^@24' type64='B56@0:8@16@24@32@40^@48' selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' type='@' name='fileURL'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='NSString*' index='3' type='@' name='mimeType'/>
<arg declared_type='NSError**' index='4' type='^@' name='error'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' type='@' name='data'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='headers'/>
<arg declared_type='NSData*' index='1' type='@' name='body'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v32@0:4@8@12@16Q20@28' type64='v56@0:8@16@24@32Q40@48' selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' type='@' name='inputStream'/>
<arg declared_type='NSString*' index='1' type='@' name='name'/>
<arg declared_type='NSString*' index='2' type='@' name='fileName'/>
<arg declared_type='unsigned long long' index='3' type='Q' name='length'/>
<arg declared_type='NSString*' index='4' type='@' name='mimeType'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4I8d12' type64='v32@0:8Q16d24' selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' type='I' name='numberOfBytes' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' type='d' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFileManager'>
<method type='@8@0:4' type64='@16@0:8' selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didArchiveLogFile:'>
<arg declared_type='NSString*' index='0' type='@' name='logFilePath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didRollAndArchiveLogFile:'>
<arg declared_type='NSString*' index='0' type='@' name='logFilePath'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='I8@0:4' type64='Q16@0:8' selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method type='v12@0:4I8' type64='v24@0:8Q16' selector='setMaximumNumberOfLogFiles:'>
<arg declared_type='NSUInteger' index='0' type='I' name='maximumNumberOfLogFiles' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFormatter'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='didAddToLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@12@0:4@8' type64='@24@0:8@16' selector='formatLogMessage:'>
<arg declared_type='DDLogMessage*' index='0' type='@' name='logMessage'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='willRemoveFromLogger:'>
<arg declared_type='id' index='0' type='@' name='logger'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogger'>
<method type='v8@0:4' type64='v16@0:8' selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='logMessage:'>
<arg declared_type='DDLogMessage*' index='0' type='@' name='logMessage'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='setLogFormatter:'>
<arg declared_type='id' index='0' type='@' name='formatter'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDRegisteredDynamicLogging'>
<method class_method='true' type='i8@0:4' type64='i16@0:8' selector='ddLogLevel'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' type='v12@0:4i8' type64='v20@0:8i16' selector='ddSetLogLevel:'>
<arg declared_type='int' index='0' type='i' name='logLevel'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFNanoObjectProtocol'>
<method type='@20@0:4@8@12@16' type64='@40@0:8@16@24@32' selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' index='0' type='@' name='theDictionary'/>
<arg declared_type='NSString*' index='1' type='@' name='aKey'/>
<arg declared_type='NSFNanoStore*' index='2' type='@' name='theStore'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' type64='@16@0:8' selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
