<?xml version='1.0'?>
<signatures version='1.0'>
<constant name='AFNetworkingErrorDomain' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationDidFinishNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationDidStartNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationFailingURLRequestErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingOperationFailingURLResponseErrorKey' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingReachabilityDidChangeNotification' const='true' declared_type='NSString*' type='@'/>
<constant name='AFNetworkingReachabilityNotificationStatusItem' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFAttribute' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFCalendarDate' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFDatatype' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFDomainKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFKeyedArchive' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFKeys' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFMemoryDatabase' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFNanoObjectBehaviorException' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFNanoStoreErrorKey' const='true' declared_type='NSInteger' type='i'/>
<constant name='NSFNanoStoreUnableToManipulateStoreException' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFNonConformingNanoObjectProtocolException' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFObjectClass' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFP_ColumnIdentifier' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFP_DatatypeIdentifier' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFP_FullDatatypeIdentifier' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFP_SchemaTable' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFP_TableIdentifier' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFRowIDColumnName' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFTemporaryDatabase' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFUnexpectedParameterException' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFValue' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFValues' const='true' declared_type='NSString*' type='@'/>
<constant name='NSFVersionKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_InvalidParameterDataCodeKey' const='true' declared_type='NSInteger' type='i'/>
<constant name='NSF_Private_MacOSXErrorCodeKey' const='true' declared_type='NSInteger' type='i'/>
<constant name='NSF_Private_NSFKeys_NSFKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFKeys_NSFKeyedArchive' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFNanoBag_NSFKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFNanoBag_NSFObjectKeys' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFNanoBag_Name' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFValues_NSFAttribute' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFValues_NSFKey' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_NSFValues_NSFValue' const='true' declared_type='NSString*' type='@'/>
<constant name='NSF_Private_ToDeleteTableKey' const='true' declared_type='NSString*' type='@'/>
<constant name='kAFUploadStream3GSuggestedDelay' const='true' declared_type='NSTimeInterval' type='d'/>
<constant name='kAFUploadStream3GSuggestedPacketSize' const='true' declared_type='NSUInteger' type='I'/>
<constant name='kReachabilityChangedNotification' const='true' declared_type='NSString*' type='@'/>
<enum name='AFFormURLParameterEncoding' value='0'/>
<enum name='AFJSONParameterEncoding' value='1'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFPropertyListParameterEncoding' value='2'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='CacheAllData' value='1'/>
<enum name='CacheDataOnDemand' value='2'/>
<enum name='DDLogMessageCopyFile' value='1'/>
<enum name='DDLogMessageCopyFunction' value='2'/>
<enum name='DEFAULT_LOG_MAX_FILE_SIZE' value='1048576'/>
<enum name='DEFAULT_LOG_MAX_NUM_LOG_FILES' value='5'/>
<enum name='DEFAULT_LOG_ROLLING_FREQUENCY' value='86400'/>
<enum name='DoNotCacheData' value='3'/>
<enum name='JournalModeDelete' value='0'/>
<enum name='JournalModeMemory' value='3'/>
<enum name='JournalModeOFF' value='5'/>
<enum name='JournalModePersist' value='2'/>
<enum name='JournalModeTruncate' value='1'/>
<enum name='JournalModeWAL' value='4'/>
<enum name='LOG_ASYNC_ENABLED' value='1'/>
<enum name='LOG_ASYNC_ERROR' value='0'/>
<enum name='LOG_ASYNC_INFO' value='1'/>
<enum name='LOG_ASYNC_VERBOSE' value='1'/>
<enum name='LOG_ASYNC_WARN' value='1'/>
<enum name='LOG_FLAG_ERROR' value='1'/>
<enum name='LOG_FLAG_INFO' value='4'/>
<enum name='LOG_FLAG_VERBOSE' value='8'/>
<enum name='LOG_FLAG_WARN' value='2'/>
<enum name='LOG_LEVEL_ERROR' value='1'/>
<enum name='LOG_LEVEL_INFO' value='7'/>
<enum name='LOG_LEVEL_OFF' value='0'/>
<enum name='LOG_LEVEL_VERBOSE' value='15'/>
<enum name='LOG_LEVEL_WARN' value='3'/>
<enum name='NEEDS_DISPATCH_RETAIN_RELEASE' value='0'/>
<enum name='NSFAfterDate' value='3'/>
<enum name='NSFAnd' value='1'/>
<enum name='NSFAttributeColumn' value='2'/>
<enum name='NSFAverage' value='1'/>
<enum name='NSFBeforeDate' value='1'/>
<enum name='NSFBeginsWith' value='1'/>
<enum name='NSFContains' value='2'/>
<enum name='NSFCount' value='2'/>
<enum name='NSFEncodingUTF16' value='2'/>
<enum name='NSFEncodingUTF8' value='1'/>
<enum name='NSFEncodingUnknown' value='3'/>
<enum name='NSFEndsWith' value='3'/>
<enum name='NSFEngineProcessingDefaultMode' value='1'/>
<enum name='NSFEngineProcessingFastMode' value='2'/>
<enum name='NSFEqualTo' value='0'/>
<enum name='NSFGreaterThan' value='8'/>
<enum name='NSFInsensitiveBeginsWith' value='5'/>
<enum name='NSFInsensitiveContains' value='6'/>
<enum name='NSFInsensitiveEndsWith' value='7'/>
<enum name='NSFInsensitiveEqualTo' value='4'/>
<enum name='NSFKeyColumn' value='1'/>
<enum name='NSFLessThan' value='9'/>
<enum name='NSFMax' value='3'/>
<enum name='NSFMemoryStoreType' value='1'/>
<enum name='NSFMin' value='4'/>
<enum name='NSFNanoTypeData' value='1'/>
<enum name='NSFNanoTypeDate' value='3'/>
<enum name='NSFNanoTypeNULL' value='5'/>
<enum name='NSFNanoTypeNumber' value='4'/>
<enum name='NSFNanoTypeRowUID' value='0'/>
<enum name='NSFNanoTypeString' value='2'/>
<enum name='NSFNanoTypeURL' value='6'/>
<enum name='NSFNanoTypeUnknown' value='-1'/>
<enum name='NSFNotEqualTo' value='10'/>
<enum name='NSFOnDate' value='2'/>
<enum name='NSFOr' value='2'/>
<enum name='NSFPersistentStoreType' value='3'/>
<enum name='NSFReturnKeys' value='2'/>
<enum name='NSFReturnObjects' value='1'/>
<enum name='NSFTemporaryStoreType' value='2'/>
<enum name='NSFTotal' value='5'/>
<enum name='NSFValueColumn' value='3'/>
<enum name='NotReachable' value='0'/>
<enum name='ReachableViaWWAN' value='1'/>
<enum name='ReachableViaWiFi' value='2'/>
<enum name='SynchronousModeFull' value='2'/>
<enum name='SynchronousModeNormal' value='1'/>
<enum name='SynchronousModeOff' value='0'/>
<enum name='TempStoreModeDefault' value='0'/>
<enum name='TempStoreModeFile' value='1'/>
<enum name='TempStoreModeMemory' value='2'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg name='string' declared_type='NSString*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg name='parameters' declared_type='NSDictionary*' type='@'/>
<arg name='encoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='DDExtractFileNameWithoutExtension'>
<arg name='filePath' const='true' declared_type='char*' type='*'/>
<arg name='copy' declared_type='BOOL' type='B'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg name='aNanoDatatype' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg name='flag' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg name='aMatchType' declared_type='NSFMatchType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg name='aNanoDatatype' declared_type='NSFNanoDatatype' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='safeJSONArrayFromArray'>
<arg name='array' declared_type='NSArray*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='safeJSONDictionaryFromDictionary'>
<arg name='dictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='safeJSONObjectFromObject'>
<arg name='object' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clientWithBaseURL:' class_method='true'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultSSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='defaultValueForHeader:'>
<arg index='0' name='header' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg index='0' name='operations' declared_type='NSArray*' type='@'/>
<arg index='1' function_pointer='true' name='progressBlock' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='completionBlock' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg index='0' name='urlRequests' declared_type='NSArray*' type='@'/>
<arg index='1' function_pointer='true' name='progressBlock' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='completionBlock' declared_type='void (^)(NSArray *)' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg index='0' name='operation' declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='3' function_pointer='true' name='block' declared_type='void (^)(id)' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<arg index='1' name='parameters' declared_type='NSDictionary*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg index='0' name='method' declared_type='NSString*' type='@'/>
<arg index='1' name='path' declared_type='NSString*' type='@'/>
<arg index='2' name='parameters' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' name='allowsInvalidSSLCertificate' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg index='0' name='token' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg index='0' name='username' declared_type='NSString*' type='@'/>
<arg index='1' name='password' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg index='0' name='credential' declared_type='NSURLCredential*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg index='0' name='header' declared_type='NSString*' type='@'/>
<arg index='1' name='value' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultSSLPinningMode:'>
<arg index='0' name='defaultSSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg index='0' name='parameterEncoding' declared_type='AFHTTPClientParameterEncoding' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='void (^)(AFNetworkReachabilityStatus)' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg index='0' name='stringEncoding' declared_type='NSStringEncoding' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg index='0' name='operationClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='acceptableContentTypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes' class_method='true'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='addAcceptableContentTypes:' class_method='true'>
<arg index='0' name='contentTypes' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addAcceptableStatusCodes:' class_method='true'>
<arg index='0' name='statusCodes' declared_type='NSIndexSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='canProcessRequest:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg index='0' function_pointer='true' name='success' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' function_pointer='true' name='failure' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg index='0' name='failureCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg index='0' name='successCallbackQueue' declared_type='dispatch_queue_t' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='imageProcessingBlock' declared_type='UIImage *(^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageRequestOperationWithRequest:success:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='success' declared_type='void (^)(UIImage *)' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImageScale:'>
<arg index='0' name='imageScale' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I'/>
</method>
<method selector='JSONRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg index='0' name='JSONReadingOptions' declared_type='NSJSONReadingOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg index='0' name='enabled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedManager' class_method='true'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method selector='propertyListRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg index='0' name='propertyListReadOptions' declared_type='NSPropertyListReadOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='SSLPinningMode'>
<retval declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg index='0' name='allowsInvalidSSLCertificate' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLProtectionSpace*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg index='0' name='credential' declared_type='NSURLCredential*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg index='0' name='inputStream' declared_type='NSInputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg index='0' name='outputStream' declared_type='NSOutputStream*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg index='0' name='runLoopModes' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg index='0' name='SSLPinningMode' declared_type='AFURLConnectionOperationSSLPinningMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg index='0' function_pointer='true' name='handler' declared_type='void (^)(void)' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg index='0' name='shouldUseCredentialStorage' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg index='0' function_pointer='true' name='block' declared_type='void (^)(NSUInteger, long long, long long)' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg index='0' name='userInfo' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method selector='XMLParserRequestOperationWithRequest:success:failure:' class_method='true'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' function_pointer='true' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='DDASLLogger'>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDASLLogger*' type='@'/>
</method>
</class>
<class name='DDAbstractDatabaseLogger'>
<method selector='deleteInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='deleteOldLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOnEverySave'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAge'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='savePendingLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveThreshold'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setDeleteInterval:'>
<arg index='0' name='deleteInterval' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteOnEverySave:'>
<arg index='0' name='deleteOnEverySave' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAge:'>
<arg index='0' name='maxAge' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg index='0' name='saveInterval' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveThreshold:'>
<arg index='0' name='saveThreshold' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDAbstractLogger'>
<method selector='isOnGlobalLoggingQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnInternalLoggerQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg index='0' name='formatter' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDFileLogger'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogFileManager:'>
<arg index='0' name='logFileManager' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFileManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumFileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='rollLogFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollingFrequency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setLogFileManager:'>
<arg index='0' name='logFileManager' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFileSize:'>
<arg index='0' name='maximumFileSize' declared_type='unsigned long long' type='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFrequency:'>
<arg index='0' name='rollingFrequency' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLog'>
<method selector='addLogger:' class_method='true'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushLog' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' selector='log:level:flag:context:file:function:line:tag:format:' class_method='true'>
<arg index='0' name='synchronous' declared_type='BOOL' type='B'/>
<arg index='1' name='level' declared_type='int' type='i'/>
<arg index='2' name='flag' declared_type='int' type='i'/>
<arg index='3' name='context' declared_type='int' type='i'/>
<arg index='4' name='file' const='true' declared_type='char*' type='*'/>
<arg index='5' name='function' const='true' declared_type='char*' type='*'/>
<arg index='6' name='line' declared_type='int' type='i'/>
<arg index='7' name='tag' declared_type='id' type='@'/>
<arg index='8' name='format' printf_format='true' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='log:level:flag:context:file:function:line:tag:format:args:' class_method='true'>
<arg index='0' name='asynchronous' declared_type='BOOL' type='B'/>
<arg index='1' name='level' declared_type='int' type='i'/>
<arg index='2' name='flag' declared_type='int' type='i'/>
<arg index='3' name='context' declared_type='int' type='i'/>
<arg index='4' name='file' const='true' declared_type='char*' type='*'/>
<arg index='5' name='function' const='true' declared_type='char*' type='*'/>
<arg index='6' name='line' declared_type='int' type='i'/>
<arg index='7' name='tag' declared_type='id' type='@'/>
<arg index='8' name='format' declared_type='NSString*' type='@'/>
<arg index='9' name='argList' declared_type='va_list' type='*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLevelForClass:' class_method='true'>
<arg index='0' name='aClass' declared_type='Class' type='#'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='logLevelForClassWithName:' class_method='true'>
<arg index='0' name='aClassName' declared_type='NSString*' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='loggingQueue' class_method='true'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='registeredClassNames' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='registeredClasses' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeAllLoggers' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLogger:' class_method='true'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClass:' class_method='true'>
<arg index='0' name='logLevel' declared_type='int' type='i'/>
<arg index='1' name='aClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClassWithName:' class_method='true'>
<arg index='0' name='logLevel' declared_type='int' type='i'/>
<arg index='1' name='aClassName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileFormatterDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg index='0' name='dateFormatter' declared_type='NSDateFormatter*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogFileInfo'>
<method selector='addExtensionAttributeWithName:'>
<arg index='0' name='attrName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='age'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='creationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='hasExtensionAttributeWithName:'>
<arg index='0' name='attrName' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFilePath:'>
<arg index='0' name='filePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFileWithPath:' class_method='true'>
<arg index='0' name='filePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='removeExtensionAttributeWithName:'>
<arg index='0' name='attrName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameFile:'>
<arg index='0' name='newFileName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseCompareByCreationDate:'>
<arg index='0' name='another' declared_type='DDLogFileInfo*' type='@'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='reverseCompareByModificationDate:'>
<arg index='0' name='another' declared_type='DDLogFileInfo*' type='@'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='setCreationDate:'>
<arg index='0' name='creationDate' declared_type='NSDate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileAttributes:'>
<arg index='0' name='fileAttributes' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg index='0' name='fileName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg index='0' name='filePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsArchived:'>
<arg index='0' name='isArchived' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg index='0' name='modificationDate' declared_type='NSDate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileManagerDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogsDirectory:'>
<arg index='0' name='logsDirectory' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogMessage'>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLogMsg:level:flag:context:file:function:line:tag:options:'>
<arg index='0' name='logMsg' declared_type='NSString*' type='@'/>
<arg index='1' name='logLevel' declared_type='int' type='i'/>
<arg index='2' name='logFlag' declared_type='int' type='i'/>
<arg index='3' name='logContext' declared_type='int' type='i'/>
<arg index='4' name='file' const='true' declared_type='char*' type='*'/>
<arg index='5' name='function' const='true' declared_type='char*' type='*'/>
<arg index='6' name='line' declared_type='int' type='i'/>
<arg index='7' name='tag' declared_type='id' type='@'/>
<arg index='8' name='optionsMask' declared_type='DDLogMessageOptions' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='threadID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='DDTTYLogger'>
<method selector='clearAllColors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllFlags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllTags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:'>
<arg index='0' name='mask' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:context:'>
<arg index='0' name='mask' declared_type='int' type='i'/>
<arg index='1' name='context' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForTag:'>
<arg index='0' name='tag' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colorsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setColorsEnabled:'>
<arg index='0' name='colorsEnabled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:'>
<arg index='0' name='txtColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='bgColor' declared_type='UIColor*' type='@'/>
<arg index='2' name='mask' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:context:'>
<arg index='0' name='txtColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='bgColor' declared_type='UIColor*' type='@'/>
<arg index='2' name='mask' declared_type='int' type='i'/>
<arg index='3' name='ctxt' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forTag:'>
<arg index='0' name='txtColor' declared_type='UIColor*' type='@'/>
<arg index='1' name='bgColor' declared_type='UIColor*' type='@'/>
<arg index='2' name='tag' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDTTYLogger*' type='@'/>
</method>
</class>
<class name='NSData'>
<method selector='MD5Digest'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='MD5Digest:' class_method='true'>
<arg index='0' name='input' declared_type='NSData*' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='MD5HexDigest'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='MD5HexDigest:' class_method='true'>
<arg index='0' name='input' declared_type='NSData*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_inflateObjectsWithKeys:'>
<arg index='0' name='someKeys' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg index='0' name='someStore' declared_type='NSFNanoStore*' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg index='0' name='aStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg index='0' name='theObject' declared_type='id' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' name='theObjects' declared_type='NSArray*' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bag' class_method='true'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bagWithName:' class_method='true'>
<arg index='0' name='theName' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bagWithName:andObjects:' class_method='true'>
<arg index='0' name='theName' declared_type='NSString*' type='@'/>
<arg index='1' name='theObjects' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bagWithObjects:' class_method='true'>
<arg index='0' name='theObjects' declared_type='NSArray*' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg index='0' name='theName' declared_type='NSString*' type='@'/>
<arg index='1' name='someObjects' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg index='0' name='otherNanoBag' declared_type='NSFNanoBag*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg index='0' name='theObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg index='0' name='theObjectKey' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' name='theObjects' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg index='0' name='theKeys' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg index='0' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg index='0' name='store' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFEncodingTypeToNSString:' class_method='true'>
<arg index='0' name='value' declared_type='NSFEncodingType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg index='0' name='tableColumns' declared_type='NSArray*' type='@'/>
<arg index='1' name='datatypes' declared_type='NSArray*' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg index='0' name='table' declared_type='NSString*' type='@'/>
<arg index='1' name='tableColumns' declared_type='NSArray*' type='@'/>
<arg index='2' name='tableDatatypes' declared_type='NSArray*' type='@'/>
<arg index='3' name='isTemporaryFlag' declared_type='BOOL' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg index='0' name='tableAndColumn' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg index='0' name='table' declared_type='NSString*' type='@'/>
<arg index='1' name='column' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_decodeQuantum:andSource:' class_method='true'>
<arg index='0' name='dest' declared_type='unsigned char*' type='*'/>
<arg index='1' name='src' const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg index='0' name='values' declared_type='NSArray*' type='@'/>
<arg index='1' name='columns' declared_type='NSArray*' type='@'/>
<arg index='2' name='table' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg index='0' name='column' declared_type='NSString*' type='@'/>
<arg index='1' name='table' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' name='prefixedSpace' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg index='0' name='tableAndColumn' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' name='aStatement' declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg index='1' name='aSQLQuery' declared_type='NSString*' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg index='0' name='column' declared_type='NSString*' type='@'/>
<arg index='1' name='table' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sharedROWIDKeywords' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg index='0' name='theSQLStatement' declared_type='NSMutableString*' type='@'/>
<arg index='1' name='columns' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg index='0' name='theSQLStatement' declared_type='NSMutableString*' type='@'/>
<arg index='1' name='tags' declared_type='NSArray*' type='@'/>
<arg index='2' name='flag' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg index='0' name='theSQLStatement' declared_type='NSMutableString*' type='@'/>
<arg index='1' name='table' declared_type='NSString*' type='@'/>
<arg index='2' name='columns' declared_type='NSArray*' type='@'/>
<arg index='3' name='datatypes' declared_type='NSArray*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_stripBitsFromExtendedResultCode:' class_method='true'>
<arg index='0' name='extendedResult' declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg index='0' name='tableAndColumn' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSStringToNSFEncodingType:' class_method='true'>
<arg index='0' name='value' declared_type='NSString*' type='@'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='_plistToDictionary:' class_method='true'>
<arg index='0' name='aPlist' declared_type='NSString*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg index='0' name='theColumn' declared_type='NSString*' type='@'/>
<arg index='1' name='theTable' declared_type='NSString*' type='@'/>
<arg index='2' name='isUnique' declared_type='BOOL' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<arg index='1' name='theColumns' declared_type='NSArray*' type='@'/>
<arg index='2' name='theDatatypes' declared_type='NSArray*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='databaseWithPath:' class_method='true'>
<arg index='0' name='thePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='decodeDataFromBase64:' class_method='true'>
<arg index='0' name='theEncodedData' declared_type='NSString*' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg index='0' name='theIndex' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='encodeDataToBase64:' class_method='true'>
<arg index='0' name='theData' declared_type='NSData*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg index='0' name='thePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg index='0' name='theTable' declared_type='NSString*' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='nanoStoreEngineVersion' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg index='0' name='theCacheMethod' declared_type='NSFCacheMethod' type='i'/>
<arg index='1' name='useFastMode' declared_type='BOOL' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recommendedCacheSize' class_method='true'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg index='0' name='theTimeout' declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg index='0' name='cacheMethod' declared_type='NSFCacheMethod' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg index='0' name='numberOfPages' declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg index='0' name='theEncodingType' declared_type='NSFEncodingType' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg index='0' name='theMode' declared_type='NSFJournalModeMode' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg index='0' name='numberOfBytes' declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg index='0' name='theSynchronousMode' declared_type='NSFSynchronousMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg index='0' name='theTempStoreMode' declared_type='NSFTempStoreMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedNanoStoreEngineDatatypes' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method selector='sqliteVersion' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringWithUUID' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method selector='systemPageSize' class_method='true'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addPredicate:withOperator:'>
<arg index='0' name='thePredicate' declared_type='NSFNanoPredicate*' type='@'/>
<arg index='1' name='theOperator' declared_type='NSFOperator' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayDescription'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='expressionWithPredicate:' class_method='true'>
<arg index='0' name='thePredicate' declared_type='NSFNanoPredicate*' type='@'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg index='0' name='thePredicate' declared_type='NSFNanoPredicate*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_NSObjectToJSONString:error:' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_safeArrayFromArray:' class_method='true'>
<arg index='0' name='array' declared_type='NSArray*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_safeDictionaryFromDictionary:' class_method='true'>
<arg index='0' name='dictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_safeObjectFromObject:' class_method='true'>
<arg index='0' name='object' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setOriginalClassString:'>
<arg index='0' name='theClassString' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg index='0' name='otherDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='theKey' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg index='0' name='otherNanoObject' declared_type='NSFNanoObject*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nanoObject' class_method='true'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='nanoObjectWithDictionary:' class_method='true'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='nanoObjectWithDictionary:key:' class_method='true'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='theKey' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg index='0' name='aKey' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' name='aKey' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg index='0' name='keyArray' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' name='anObject' declared_type='id' type='@'/>
<arg index='1' name='aKey' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg index='0' name='store' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg index='0' name='theType' declared_type='NSFTableColumnType' type='i'/>
<arg index='1' name='theMatch' declared_type='NSFMatchType' type='i'/>
<arg index='2' name='theValue' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='predicateWithColumn:matching:value:' class_method='true'>
<arg index='0' name='theType' declared_type='NSFTableColumnType' type='i'/>
<arg index='1' name='theMatch' declared_type='NSFMatchType' type='i'/>
<arg index='2' name='theValue' declared_type='id' type='@'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg index='0' name='results' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_resultWithDictionary:' class_method='true'>
<arg index='0' name='results' declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_resultWithError:' class_method='true'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setError:'>
<arg index='0' name='error' declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg index='0' name='theIndex' declared_type='NSUInteger' type='I'/>
<arg index='1' name='theColumn' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg index='0' name='theColumn' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg index='0' name='thePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg index='0' name='aKey' declared_type='NSString*' type='@'/>
<arg index='1' name='anAttribute' declared_type='NSString*' type='@'/>
<arg index='2' name='aValue' declared_type='NSString*' type='@'/>
<arg index='3' name='match' declared_type='NSFMatchType' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg index='0' name='aKey' declared_type='NSString*' type='@'/>
<arg index='1' name='anAttribute' declared_type='NSString*' type='@'/>
<arg index='2' name='aValue' declared_type='NSString*' type='@'/>
<arg index='3' name='match' declared_type='NSFMatchType' type='i'/>
<arg index='4' name='returnedObjectType' declared_type='NSFReturnType' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg index='0' name='keyPath' declared_type='NSString*' type='@'/>
<arg index='1' name='value' declared_type='id' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg index='0' name='someExpressions' declared_type='NSArray*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg index='0' name='aKey' declared_type='NSString*' type='@'/>
<arg index='1' name='anAttribute' declared_type='NSString*' type='@'/>
<arg index='2' name='aValue' declared_type='id' type='@'/>
<arg index='3' name='match' declared_type='NSFMatchType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKeys:' class_method='true'>
<arg index='0' name='someKeys' declared_type='NSArray*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:' class_method='true'>
<arg index='0' name='anAttributeValue' declared_type='id' type='@'/>
<arg index='1' name='match' declared_type='NSFMatchType' type='i'/>
<arg index='2' name='aValue' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_querySegmentForColumn:value:matching:' class_method='true'>
<arg index='0' name='aColumn' declared_type='NSString*' type='@'/>
<arg index='1' name='aValue' declared_type='id' type='@'/>
<arg index='2' name='match' declared_type='NSFMatchType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_quoteStrings:joiningWithDelimiter:' class_method='true'>
<arg index='0' name='strings' declared_type='NSArray*' type='@'/>
<arg index='1' name='delimiter' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg index='0' name='aDateMatch' declared_type='NSFDateMatchType' type='i'/>
<arg index='1' name='aDate' declared_type='NSDate*' type='@'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg index='0' name='results' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='theReturnType' declared_type='NSFReturnType' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg index='0' name='theFunctionType' declared_type='NSFAggregateFunctionType' type='i'/>
<arg index='1' name='theAttribute' declared_type='NSString*' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<arg index='1' name='theReturnType' declared_type='NSFReturnType' type='i'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg index='0' name='theNanoStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='limit'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg index='0' name='theDateMatch' declared_type='NSFDateMatchType' type='i'/>
<arg index='1' name='theDate' declared_type='NSDate*' type='@'/>
<arg index='2' name='theReturnType' declared_type='NSFReturnType' type='i'/>
<arg index='3' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg index='0' name='theReturnType' declared_type='NSFReturnType' type='i'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchWithStore:' class_method='true'>
<arg index='0' name='theNanoStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg index='0' name='attribute' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg index='0' name='attributesToBeReturned' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBag:'>
<arg index='0' name='bag' declared_type='NSFNanoBag*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg index='0' name='expressions' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg index='0' name='filterClass' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg index='0' name='groupValues' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLimit:'>
<arg index='0' name='limit' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg index='0' name='match' declared_type='NSFMatchType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg index='0' name='nanoStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg index='0' name='offset' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg index='0' name='sort' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg index='0' name='value' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg index='0' name='theAttribute' declared_type='NSString*' type='@'/>
<arg index='1' name='ascending' declared_type='BOOL' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sortDescriptorWithAttribute:ascending:' class_method='true'>
<arg index='0' name='theAttribute' declared_type='NSString*' type='@'/>
<arg index='1' name='ascending' declared_type='BOOL' type='B'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_NSFDatatypeOfObject:'>
<arg index='0' name='value' declared_type='id' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg index='0' name='someObjects' declared_type='NSArray*' type='@'/>
<arg index='1' name='someKeys' declared_type='NSArray*' type='@'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg index='0' name='someObjects' declared_type='NSArray*' type='@'/>
<arg index='1' name='forceSave' declared_type='BOOL' type='B'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' name='aPath' declared_type='NSString*' type='@'/>
<arg index='1' name='anExtension' declared_type='NSString*' type='@'/>
<arg index='2' name='flag' declared_type='BOOL' type='B'/>
<arg index='3' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' name='aPath' declared_type='NSString*' type='@'/>
<arg index='1' name='anExtension' declared_type='NSString*' type='@'/>
<arg index='2' name='flag' declared_type='BOOL' type='B'/>
<arg index='3' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg index='0' name='aValue' declared_type='id' type='@'/>
<arg index='1' name='anAttribute' declared_type='NSString*' type='@'/>
<arg index='2' name='aParamNumber' declared_type='NSInteger' type='i'/>
<arg index='3' name='aStatement' declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_calendarDateToString:' class_method='true'>
<arg index='0' name='aDate' declared_type='NSDate*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_createAndOpenDebugDatabase' class_method='true'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='_defaultTestData' class_method='true'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg index='0' name='theSQLStatement' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg index='0' name='aStatement' declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg index='0' name='someObject' declared_type='id' type='@'/>
<arg index='1' name='aKeyPath' declared_type='NSMutableArray**' type='^@'/>
<arg index='2' name='someKeys' declared_type='NSMutableArray**' type='^@'/>
<arg index='3' name='someValues' declared_type='NSMutableArray**' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg index='0' name='info' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='flattenedKeys' declared_type='NSMutableArray**' type='^@'/>
<arg index='2' name='flattenedValues' declared_type='NSMutableArray**' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' name='prefixedSpace' declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' name='aStatement' declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg index='1' name='aSQLQuery' declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg index='0' name='value' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:error:'>
<arg index='0' name='someInfo' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='aKey' declared_type='NSString*' type='@'/>
<arg index='2' name='classType' declared_type='NSString*' type='@'/>
<arg index='3' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg index='0' name='aValue' declared_type='id' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg index='0' name='theObject' declared_type='id' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' name='theObjects' declared_type='NSArray*' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg index='0' name='theName' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg index='0' name='theKey' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg index='0' name='theKeys' declared_type='NSArray*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithName:'>
<arg index='0' name='theName' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg index='0' name='theClassName' declared_type='NSString*' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='createAndOpenStoreWithType:path:error:' class_method='true'>
<arg index='0' name='theType' declared_type='NSFNanoStoreType' type='i'/>
<arg index='1' name='thePath' declared_type='NSString*' type='@'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='createStoreWithType:path:' class_method='true'>
<arg index='0' name='theType' declared_type='NSFNanoStoreType' type='i'/>
<arg index='1' name='thePath' declared_type='NSString*' type='@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg index='0' name='theType' declared_type='NSFNanoStoreType' type='i'/>
<arg index='1' name='thePath' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg index='0' name='theClassName' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg index='0' name='theClassName' declared_type='NSString*' type='@'/>
<arg index='1' name='theSortDescriptors' declared_type='NSArray*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg index='0' name='theKeys' declared_type='NSArray*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg index='0' name='theObject' declared_type='id' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg index='0' name='theObjects' declared_type='NSArray*' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg index='0' name='theKeys' declared_type='NSArray*' type='@'/>
<arg index='1' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg index='0' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg index='0' name='thePath' declared_type='NSString*' type='@'/>
<arg index='1' name='shouldCompact' declared_type='BOOL' type='B'/>
<arg index='2' type_modifier='o' name='outError' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg index='0' name='nanoEngineProcessingMode' declared_type='NSFEngineProcessingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg index='0' name='nanoStoreEngine' declared_type='NSFNanoEngine*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg index='0' name='saveInterval' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg index='0' name='anObject' declared_type='id' type='@'/>
<arg index='1' name='aKey' declared_type='id' type='@'/>
<arg index='2' name='anIndex' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyAtIndex:'>
<arg index='0' name='anIndex' declared_type='NSUInteger' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<arg index='4' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg index='0' name='headers' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='body' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg index='0' name='inputStream' declared_type='NSInputStream*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='length' declared_type='unsigned long long' type='Q'/>
<arg index='4' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='ddLogLevel' class_method='true'>
<retval declared_type='int' type='i'/>
</method>
<method selector='ddSetLogLevel:' class_method='true'>
<arg index='0' name='logLevel' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddToLogger:'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didArchiveLogFile:'>
<arg index='0' name='logFilePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:'>
<arg index='0' name='logFilePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:'>
<arg index='0' name='logMessage' declared_type='DDLogMessage*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='aKey' declared_type='NSString*' type='@'/>
<arg index='2' name='theStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:'>
<arg index='0' name='logMessage' declared_type='DDLogMessage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg index='0' name='formatter' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLogFiles:'>
<arg index='0' name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg index='0' name='numberOfBytes' declared_type='NSUInteger' type='I'/>
<arg index='1' name='delay' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='willRemoveFromLogger:'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='Reachability'>
<method selector='connectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentReachabilityFlags'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currentReachabilityStatus'>
<retval declared_type='NetworkStatus' type='i'/>
</method>
<method selector='currentReachabilityString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithReachabilityRef:'>
<arg index='0' name='ref' declared_type='SCNetworkReachabilityRef' type='^{__SCNetworkReachability=}'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='isConnectionOnDemand'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isConnectionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isInterventionRequired'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='reachabilityFlags'>
<retval declared_type='SCNetworkReachabilityFlags' type='I'/>
</method>
<method selector='reachabilityForInternetConnection' class_method='true'>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='reachabilityForLocalWiFi' class_method='true'>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='reachabilityWithAddress:' class_method='true'>
<arg index='0' name='hostAddress' const='true' declared_type='struct sockaddr_in*' type='^{sockaddr_in=CCS{in_addr=I}[8c]}'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='reachabilityWithHostname:' class_method='true'>
<arg index='0' name='hostname' declared_type='NSString*' type='@'/>
<retval declared_type='Reachability*' type='@'/>
</method>
<method selector='reachableBlock'>
<retval function_pointer='true' declared_type='NetworkReachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='reachableOnWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setReachableBlock:'>
<arg index='0' function_pointer='true' name='reachableBlock' declared_type='NetworkReachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachableOnWWAN:'>
<arg index='0' name='reachableOnWWAN' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnreachableBlock:'>
<arg index='0' function_pointer='true' name='unreachableBlock' declared_type='NetworkUnreachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startNotifier'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stopNotifier'>
<retval declared_type='void' type='v'/>
</method>
<method selector='unreachableBlock'>
<retval function_pointer='true' declared_type='NetworkUnreachable' type='@?'>
<arg declared_type='Reachability*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg index='0' name='url' declared_type='NSURL*' type='@'/>
<arg index='1' name='placeholderImage' declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg index='0' name='urlRequest' declared_type='NSURLRequest*' type='@'/>
<arg index='1' name='placeholderImage' declared_type='UIImage*' type='@'/>
<arg index='2' function_pointer='true' name='success' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg index='3' function_pointer='true' name='failure' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24'>
<arg index='0' name='fileURL' declared_type='NSURL*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='mimeType' declared_type='NSString*' type='@'/>
<arg index='4' name='error' declared_type='NSError**' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12'>
<arg index='0' name='data' declared_type='NSData*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12'>
<arg index='0' name='headers' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='body' declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16Q20@28'>
<arg index='0' name='inputStream' declared_type='NSInputStream*' type='@'/>
<arg index='1' name='name' declared_type='NSString*' type='@'/>
<arg index='2' name='fileName' declared_type='NSString*' type='@'/>
<arg index='3' name='length' declared_type='unsigned long long' type='Q'/>
<arg index='4' name='mimeType' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12'>
<arg index='0' name='numberOfBytes' declared_type='NSUInteger' type='I'/>
<arg index='1' name='delay' declared_type='NSTimeInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFileManager'>
<method selector='createNewLogFile' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='didArchiveLogFile:' type='v12@0:4@8'>
<arg index='0' name='logFilePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:' type='v12@0:4@8'>
<arg index='0' name='logFilePath' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logsDirectory' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles' type='I8@0:4'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setMaximumNumberOfLogFiles:' type='v12@0:4I8'>
<arg index='0' name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedLogFileInfos' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileInfos' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths' type='@8@0:4'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFormatter'>
<method selector='didAddToLogger:' type='v12@0:4@8'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:' type='@12@0:4@8'>
<arg index='0' name='logMessage' declared_type='DDLogMessage*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='willRemoveFromLogger:' type='v12@0:4@8'>
<arg index='0' name='logger' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogger'>
<method selector='didAddLogger' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='logFormatter' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:' type='v12@0:4@8'>
<arg index='0' name='logMessage' declared_type='DDLogMessage*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue' type='@8@0:4'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='setLogFormatter:' type='v12@0:4@8'>
<arg index='0' name='formatter' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveLogger' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDRegisteredDynamicLogging'>
<method selector='ddLogLevel' class_method='true' type='i8@0:4'>
<retval declared_type='int' type='i'/>
</method>
<method selector='ddSetLogLevel:' class_method='true' type='v12@0:4i8'>
<arg index='0' name='logLevel' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFNanoObjectProtocol'>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:' type='@20@0:4@8@12@16'>
<arg index='0' name='theDictionary' declared_type='NSDictionary*' type='@'/>
<arg index='1' name='aKey' declared_type='NSString*' type='@'/>
<arg index='2' name='theStore' declared_type='NSFNanoStore*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nanoObjectDictionaryRepresentation' type='@8@0:4'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey' type='@8@0:4'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
