<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingErrorDomain'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationDidFinishNotification'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationDidStartNotification'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLRequestErrorKey'/>
<constant const='true' declared_type='NSString*' type='@' name='AFNetworkingOperationFailingURLResponseErrorKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFAttribute'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFCalendarDate'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFDatatype'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFDomainKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKeyedArchive'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFKeys'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFMemoryDatabase'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNanoObjectBehaviorException'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSFNanoStoreErrorKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNanoStoreUnableToManipulateStoreException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFNonConformingNanoObjectProtocolException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFObjectClass'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_ColumnIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_DatatypeIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_FullDatatypeIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_SchemaTable'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFP_TableIdentifier'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFRowIDColumnName'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFTemporaryDatabase'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFUnexpectedParameterException'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFValue'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFValues'/>
<constant const='true' declared_type='NSString*' type='@' name='NSFVersionKey'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSF_Private_InvalidParameterDataCodeKey'/>
<constant const='true' declared_type='NSInteger' type='i' name='NSF_Private_MacOSXErrorCodeKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFKeyedArchive'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFObjectKeys'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_Name'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFAttribute'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFKey'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFValue'/>
<constant const='true' declared_type='NSString*' type='@' name='NSF_Private_ToDeleteTableKey'/>
<constant const='true' declared_type='NSTimeInterval' type='d' name='kAFUploadStream3GSuggestedDelay'/>
<constant const='true' declared_type='NSUInteger' type='I' name='kAFUploadStream3GSuggestedPacketSize'/>
<enum value='0' name='AFFormURLParameterEncoding'/>
<enum value='1' name='AFJSONParameterEncoding'/>
<enum value='2' name='AFPropertyListParameterEncoding'/>
<enum value='1' name='CacheAllData'/>
<enum value='2' name='CacheDataOnDemand'/>
<enum value='1' name='DDLogMessageCopyFile'/>
<enum value='2' name='DDLogMessageCopyFunction'/>
<enum value='1048576' name='DEFAULT_LOG_MAX_FILE_SIZE'/>
<enum value='5' name='DEFAULT_LOG_MAX_NUM_LOG_FILES'/>
<enum value='86400' name='DEFAULT_LOG_ROLLING_FREQUENCY'/>
<enum value='3' name='DoNotCacheData'/>
<enum value='0' name='JournalModeDelete'/>
<enum value='3' name='JournalModeMemory'/>
<enum value='5' name='JournalModeOFF'/>
<enum value='2' name='JournalModePersist'/>
<enum value='1' name='JournalModeTruncate'/>
<enum value='4' name='JournalModeWAL'/>
<enum value='1' name='LOG_ASYNC_ENABLED'/>
<enum value='0' name='LOG_ASYNC_ERROR'/>
<enum value='1' name='LOG_ASYNC_INFO'/>
<enum value='1' name='LOG_ASYNC_VERBOSE'/>
<enum value='1' name='LOG_ASYNC_WARN'/>
<enum value='1' name='LOG_FLAG_ERROR'/>
<enum value='4' name='LOG_FLAG_INFO'/>
<enum value='8' name='LOG_FLAG_VERBOSE'/>
<enum value='2' name='LOG_FLAG_WARN'/>
<enum value='1' name='LOG_LEVEL_ERROR'/>
<enum value='7' name='LOG_LEVEL_INFO'/>
<enum value='0' name='LOG_LEVEL_OFF'/>
<enum value='15' name='LOG_LEVEL_VERBOSE'/>
<enum value='3' name='LOG_LEVEL_WARN'/>
<enum value='3' name='NSFAfterDate'/>
<enum value='1' name='NSFAnd'/>
<enum value='2' name='NSFAttributeColumn'/>
<enum value='1' name='NSFAverage'/>
<enum value='1' name='NSFBeforeDate'/>
<enum value='1' name='NSFBeginsWith'/>
<enum value='2' name='NSFContains'/>
<enum value='2' name='NSFCount'/>
<enum value='2' name='NSFEncodingUTF16'/>
<enum value='1' name='NSFEncodingUTF8'/>
<enum value='3' name='NSFEncodingUnknown'/>
<enum value='3' name='NSFEndsWith'/>
<enum value='1' name='NSFEngineProcessingDefaultMode'/>
<enum value='2' name='NSFEngineProcessingFastMode'/>
<enum value='0' name='NSFEqualTo'/>
<enum value='8' name='NSFGreaterThan'/>
<enum value='5' name='NSFInsensitiveBeginsWith'/>
<enum value='6' name='NSFInsensitiveContains'/>
<enum value='7' name='NSFInsensitiveEndsWith'/>
<enum value='4' name='NSFInsensitiveEqualTo'/>
<enum value='1' name='NSFKeyColumn'/>
<enum value='9' name='NSFLessThan'/>
<enum value='3' name='NSFMax'/>
<enum value='1' name='NSFMemoryStoreType'/>
<enum value='4' name='NSFMin'/>
<enum value='1' name='NSFNanoTypeData'/>
<enum value='3' name='NSFNanoTypeDate'/>
<enum value='5' name='NSFNanoTypeNULL'/>
<enum value='4' name='NSFNanoTypeNumber'/>
<enum value='0' name='NSFNanoTypeRowUID'/>
<enum value='2' name='NSFNanoTypeString'/>
<enum value='6' name='NSFNanoTypeURL'/>
<enum value='-1' name='NSFNanoTypeUnknown'/>
<enum value='10' name='NSFNotEqualTo'/>
<enum value='2' name='NSFOnDate'/>
<enum value='2' name='NSFOr'/>
<enum value='3' name='NSFPersistentStoreType'/>
<enum value='2' name='NSFReturnKeys'/>
<enum value='1' name='NSFReturnObjects'/>
<enum value='2' name='NSFTemporaryStoreType'/>
<enum value='5' name='NSFTotal'/>
<enum value='3' name='NSFValueColumn'/>
<enum value='2' name='SynchronousModeFull'/>
<enum value='1' name='SynchronousModeNormal'/>
<enum value='0' name='SynchronousModeOff'/>
<enum value='0' name='TempStoreModeDefault'/>
<enum value='1' name='TempStoreModeFile'/>
<enum value='2' name='TempStoreModeMemory'/>
<function name='AFContentTypesFromHTTPHeader'>
<arg declared_type='NSString*' type='@' name='string'/>
<retval declared_type='NSSet*' type='@'/>
</function>
<function name='AFQueryStringFromParametersWithEncoding'>
<arg declared_type='NSDictionary*' type='@' name='parameters'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='DDExtractFileNameWithoutExtension'>
<arg const='true' declared_type='char*' type='*' name='filePath'/>
<arg declared_type='BOOL' type='B' name='copy'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg declared_type='NSString*' type='@' name='aNanoDatatype'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg declared_type='BOOL' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg declared_type='NSFMatchType' type='i' name='aMatchType'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg declared_type='NSFNanoDatatype' type='i' name='aNanoDatatype'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='safeJSONArrayFromArray'>
<arg declared_type='NSArray*' type='@' name='array'/>
<retval declared_type='NSArray*' type='@'/>
</function>
<function name='safeJSONDictionaryFromDictionary'>
<arg declared_type='NSDictionary*' type='@' name='dictionary'/>
<retval declared_type='NSDictionary*' type='@'/>
</function>
<function name='safeJSONObjectFromObject'>
<arg declared_type='id' type='@' name='object'/>
<retval declared_type='id' type='@'/>
</function>
<class name='AFHTTPClient'>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='1'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='cancelAllHTTPOperationsWithMethod:path:'>
<arg declared_type='NSString*' type='@' name='method' index='0'/>
<arg declared_type='NSString*' type='@' name='path' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clientWithBaseURL:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultValueForHeader:'>
<arg declared_type='NSString*' type='@' name='header' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deletePath:parameters:success:failure:'>
<arg declared_type='NSString*' type='@' name='path' index='0'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='1'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' type='@' name='operations' index='0'/>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?' name='progressBlock' index='1'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' name='completionBlock' index='2'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueBatchOfHTTPRequestOperationsWithRequests:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' type='@' name='urlRequests' index='0'/>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, NSUInteger)' type='@?' name='progressBlock' index='1'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' name='completionBlock' index='2'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='enqueueHTTPRequestOperation:'>
<arg declared_type='AFHTTPRequestOperation*' type='@' name='operation' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPath:parameters:success:failure:'>
<arg declared_type='NSString*' type='@' name='path' index='0'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='1'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:path:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' type='@' name='method' index='0'/>
<arg declared_type='NSString*' type='@' name='path' index='1'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='2'/>
<arg function_pointer='true' declared_type='void (^)(id)' type='@?' name='block' index='3'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='parameterEncoding'>
<retval declared_type='AFHTTPClientParameterEncoding' type='i'/>
</method>
<method selector='patchPath:parameters:success:failure:'>
<arg declared_type='NSString*' type='@' name='path' index='0'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='1'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='postPath:parameters:success:failure:'>
<arg declared_type='NSString*' type='@' name='path' index='0'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='1'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='putPath:parameters:success:failure:'>
<arg declared_type='NSString*' type='@' name='path' index='0'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='1'/>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='2'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='registerHTTPOperationClass:'>
<arg declared_type='Class' type='#' name='operationClass' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestWithMethod:path:parameters:'>
<arg declared_type='NSString*' type='@' name='method' index='0'/>
<arg declared_type='NSString*' type='@' name='path' index='1'/>
<arg declared_type='NSDictionary*' type='@' name='parameters' index='2'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' type='B' name='allowsInvalidSSLCertificate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithToken:'>
<arg declared_type='NSString*' type='@' name='token' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderWithUsername:password:'>
<arg declared_type='NSString*' type='@' name='username' index='0'/>
<arg declared_type='NSString*' type='@' name='password' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultCredential:'>
<arg declared_type='NSURLCredential*' type='@' name='credential' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultHeader:value:'>
<arg declared_type='NSString*' type='@' name='header' index='0'/>
<arg declared_type='NSString*' type='@' name='value' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameterEncoding:'>
<arg declared_type='AFHTTPClientParameterEncoding' type='i' name='parameterEncoding' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' type='I' name='stringEncoding' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='unregisterHTTPOperationClass:'>
<arg declared_type='Class' type='#' name='operationClass' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method class_method='true' selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method class_method='true' selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='addAcceptableContentTypes:'>
<arg declared_type='NSSet*' type='@' name='contentTypes' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='addAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' type='@' name='statusCodes' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='canProcessRequest:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='failureCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='hasAcceptableContentType'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasAcceptableStatusCode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, id)' type='@?' name='success' index='0'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' type='@?' name='failure' index='1'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFailureCallbackQueue:'>
<arg declared_type='dispatch_queue_t' type='@' name='failureCallbackQueue' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSuccessCallbackQueue:'>
<arg declared_type='dispatch_queue_t' type='@' name='successCallbackQueue' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='successCallbackQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
</class>
<class name='AFImageRequestOperation'>
<method class_method='true' selector='imageRequestOperationWithRequest:imageProcessingBlock:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='UIImage *(^)(UIImage *)' type='@?' name='imageProcessingBlock' index='1'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?' name='success' index='2'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='imageRequestOperationWithRequest:success:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='void (^)(UIImage *)' type='@?' name='success' index='1'>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='responseImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' type='f' name='imageScale' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestOperation'>
<method selector='JSONReadingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I'/>
</method>
<method class_method='true' selector='JSONRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?' name='success' index='1'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?' name='failure' index='2'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseJSON'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setJSONReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' type='I' name='JSONReadingOptions' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' type='B' name='enabled' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFPropertyListRequestOperation'>
<method selector='propertyListReadOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method class_method='true' selector='propertyListRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, id)' type='@?' name='success' index='1'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, id)' type='@?' name='failure' index='2'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responsePropertyList'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPropertyListReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' type='I' name='propertyListReadOptions' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method selector='allowsInvalidSSLCertificate'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='setAllowsInvalidSSLCertificate:'>
<arg declared_type='BOOL' type='B' name='allowsInvalidSSLCertificate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationAgainstProtectionSpaceBlock:'>
<arg function_pointer='true' declared_type='BOOL (^)(NSURLConnection *, NSURLProtectionSpace *)' type='@?' name='block' index='0'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLProtectionSpace*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationChallengeBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' type='@?' name='block' index='0'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg function_pointer='true' declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' type='@?' name='block' index='0'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' type='@' name='credential' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' type='@?' name='block' index='0'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' type='@' name='inputStream' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' type='@' name='outputStream' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg function_pointer='true' declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' type='@?' name='block' index='0'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' type='@' name='runLoopModes' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg function_pointer='true' declared_type='void (^)(void)' type='@?' name='handler' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' type='B' name='shouldUseCredentialStorage' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg function_pointer='true' declared_type='void (^)(NSUInteger, long long, long long)' type='@?' name='block' index='0'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' type='@' name='userInfo' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFXMLRequestOperation'>
<method class_method='true' selector='XMLParserRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSXMLParser *)' type='@?' name='success' index='1'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *, NSXMLParser *)' type='@?' name='failure' index='2'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='NSXMLParser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseXMLParser'>
<retval declared_type='NSXMLParser*' type='@'/>
</method>
</class>
<class name='DDASLLogger'>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='DDASLLogger*' type='@'/>
</method>
</class>
<class name='DDAbstractDatabaseLogger'>
<method selector='deleteInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='deleteOldLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOnEverySave'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAge'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='savePendingLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveThreshold'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setDeleteInterval:'>
<arg declared_type='NSTimeInterval' type='d' name='deleteInterval' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteOnEverySave:'>
<arg declared_type='BOOL' type='B' name='deleteOnEverySave' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAge:'>
<arg declared_type='NSTimeInterval' type='d' name='maxAge' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSTimeInterval' type='d' name='saveInterval' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveThreshold:'>
<arg declared_type='NSUInteger' type='I' name='saveThreshold' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDAbstractLogger'>
<method selector='isOnGlobalLoggingQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOnInternalLoggerQueue'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg declared_type='id' type='@' name='formatter' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDFileLogger'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogFileManager:'>
<arg declared_type='id' type='@' name='logFileManager' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFileManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumFileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='rollLogFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollingFrequency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setLogFileManager:'>
<arg declared_type='id' type='@' name='logFileManager' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFileSize:'>
<arg declared_type='unsigned long long' type='Q' name='maximumFileSize' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFrequency:'>
<arg declared_type='NSTimeInterval' type='d' name='rollingFrequency' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLog'>
<method class_method='true' selector='addLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='flushLog'>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' class_method='true' selector='log:level:flag:context:file:function:line:tag:format:'>
<arg declared_type='BOOL' type='B' name='synchronous' index='0'/>
<arg declared_type='int' type='i' name='level' index='1'/>
<arg declared_type='int' type='i' name='flag' index='2'/>
<arg declared_type='int' type='i' name='context' index='3'/>
<arg const='true' declared_type='char*' type='*' name='file' index='4'/>
<arg const='true' declared_type='char*' type='*' name='function' index='5'/>
<arg declared_type='int' type='i' name='line' index='6'/>
<arg declared_type='id' type='@' name='tag' index='7'/>
<arg declared_type='NSString*' type='@' name='format' index='8' printf_format='true'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='log:level:flag:context:file:function:line:tag:format:args:'>
<arg declared_type='BOOL' type='B' name='asynchronous' index='0'/>
<arg declared_type='int' type='i' name='level' index='1'/>
<arg declared_type='int' type='i' name='flag' index='2'/>
<arg declared_type='int' type='i' name='context' index='3'/>
<arg const='true' declared_type='char*' type='*' name='file' index='4'/>
<arg const='true' declared_type='char*' type='*' name='function' index='5'/>
<arg declared_type='int' type='i' name='line' index='6'/>
<arg declared_type='id' type='@' name='tag' index='7'/>
<arg declared_type='NSString*' type='@' name='format' index='8'/>
<arg declared_type='va_list' type='*' name='argList' index='9'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='logLevelForClass:'>
<arg declared_type='Class' type='#' name='aClass' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='logLevelForClassWithName:'>
<arg declared_type='NSString*' type='@' name='aClassName' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='loggingQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method class_method='true' selector='registeredClassNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='registeredClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='removeAllLoggers'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='removeLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLogLevel:forClass:'>
<arg declared_type='int' type='i' name='logLevel' index='0'/>
<arg declared_type='Class' type='#' name='aClass' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setLogLevel:forClassWithName:'>
<arg declared_type='int' type='i' name='logLevel' index='0'/>
<arg declared_type='NSString*' type='@' name='aClassName' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileFormatterDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg declared_type='NSDateFormatter*' type='@' name='dateFormatter' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogFileInfo'>
<method selector='addExtensionAttributeWithName:'>
<arg declared_type='NSString*' type='@' name='attrName' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='age'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='creationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='hasExtensionAttributeWithName:'>
<arg declared_type='NSString*' type='@' name='attrName' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFilePath:'>
<arg declared_type='NSString*' type='@' name='filePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='logFileWithPath:'>
<arg declared_type='NSString*' type='@' name='filePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='removeExtensionAttributeWithName:'>
<arg declared_type='NSString*' type='@' name='attrName' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameFile:'>
<arg declared_type='NSString*' type='@' name='newFileName' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseCompareByCreationDate:'>
<arg declared_type='DDLogFileInfo*' type='@' name='another' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='reverseCompareByModificationDate:'>
<arg declared_type='DDLogFileInfo*' type='@' name='another' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='setCreationDate:'>
<arg declared_type='NSDate*' type='@' name='creationDate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileAttributes:'>
<arg declared_type='NSDictionary*' type='@' name='fileAttributes' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg declared_type='NSString*' type='@' name='fileName' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg declared_type='NSString*' type='@' name='filePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsArchived:'>
<arg declared_type='BOOL' type='B' name='isArchived' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg declared_type='NSDate*' type='@' name='modificationDate' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileManagerDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogsDirectory:'>
<arg declared_type='NSString*' type='@' name='logsDirectory' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogMessage'>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLogMsg:level:flag:context:file:function:line:tag:options:'>
<arg declared_type='NSString*' type='@' name='logMsg' index='0'/>
<arg declared_type='int' type='i' name='logLevel' index='1'/>
<arg declared_type='int' type='i' name='logFlag' index='2'/>
<arg declared_type='int' type='i' name='logContext' index='3'/>
<arg const='true' declared_type='char*' type='*' name='file' index='4'/>
<arg const='true' declared_type='char*' type='*' name='function' index='5'/>
<arg declared_type='int' type='i' name='line' index='6'/>
<arg declared_type='id' type='@' name='tag' index='7'/>
<arg declared_type='DDLogMessageOptions' type='i' name='optionsMask' index='8'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='threadID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='DDTTYLogger'>
<method selector='clearAllColors'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllFlags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForAllTags'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:'>
<arg declared_type='int' type='i' name='mask' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForFlag:context:'>
<arg declared_type='int' type='i' name='mask' index='0'/>
<arg declared_type='int' type='i' name='context' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearColorsForTag:'>
<arg declared_type='id' type='@' name='tag' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colorsEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setColorsEnabled:'>
<arg declared_type='BOOL' type='B' name='colorsEnabled' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:'>
<arg declared_type='UIColor*' type='@' name='txtColor' index='0'/>
<arg declared_type='UIColor*' type='@' name='bgColor' index='1'/>
<arg declared_type='int' type='i' name='mask' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forFlag:context:'>
<arg declared_type='UIColor*' type='@' name='txtColor' index='0'/>
<arg declared_type='UIColor*' type='@' name='bgColor' index='1'/>
<arg declared_type='int' type='i' name='mask' index='2'/>
<arg declared_type='int' type='i' name='ctxt' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setForegroundColor:backgroundColor:forTag:'>
<arg declared_type='UIColor*' type='@' name='txtColor' index='0'/>
<arg declared_type='UIColor*' type='@' name='bgColor' index='1'/>
<arg declared_type='id' type='@' name='tag' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='DDTTYLogger*' type='@'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_inflateObjectsWithKeys:'>
<arg declared_type='NSArray*' type='@' name='someKeys' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg declared_type='NSFNanoStore*' type='@' name='someStore' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='aStore' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<arg declared_type='NSArray*' type='@' name='theObjects' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<arg declared_type='NSArray*' type='@' name='someObjects' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg declared_type='NSFNanoBag*' type='@' name='otherNanoBag' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg declared_type='NSString*' type='@' name='theObjectKey' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' type='@' name='name' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='store' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg declared_type='NSFEncodingType' type='i' name='value' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg declared_type='NSArray*' type='@' name='tableColumns' index='0'/>
<arg declared_type='NSArray*' type='@' name='datatypes' index='1'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg declared_type='NSString*' type='@' name='table' index='0'/>
<arg declared_type='NSArray*' type='@' name='tableColumns' index='1'/>
<arg declared_type='NSArray*' type='@' name='tableDatatypes' index='2'/>
<arg declared_type='BOOL' type='B' name='isTemporaryFlag' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg declared_type='NSString*' type='@' name='table' index='0'/>
<arg declared_type='NSString*' type='@' name='column' index='1'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg declared_type='unsigned char*' type='*' name='dest' index='0'/>
<arg const='true' declared_type='char*' type='*' name='src' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg declared_type='NSArray*' type='@' name='values' index='0'/>
<arg declared_type='NSArray*' type='@' name='columns' index='1'/>
<arg declared_type='NSString*' type='@' name='table' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg declared_type='NSString*' type='@' name='column' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' type='@' name='prefixedSpace' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}' name='aStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='aSQLQuery' index='1'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg declared_type='NSString*' type='@' name='column' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSArray*' type='@' name='columns' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSArray*' type='@' name='tags' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<arg declared_type='NSArray*' type='@' name='columns' index='2'/>
<arg declared_type='NSArray*' type='@' name='datatypes' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg declared_type='int' type='i' name='extendedResult' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg declared_type='NSString*' type='@' name='value' index='0'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg declared_type='NSString*' type='@' name='aPlist' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg declared_type='NSString*' type='@' name='theColumn' index='0'/>
<arg declared_type='NSString*' type='@' name='theTable' index='1'/>
<arg declared_type='BOOL' type='B' name='isUnique' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<arg declared_type='NSArray*' type='@' name='theColumns' index='1'/>
<arg declared_type='NSArray*' type='@' name='theDatatypes' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg declared_type='NSString*' type='@' name='theEncodedData' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg declared_type='NSString*' type='@' name='theIndex' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg declared_type='NSData*' type='@' name='theData' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg declared_type='NSFCacheMethod' type='i' name='theCacheMethod' index='0'/>
<arg declared_type='BOOL' type='B' name='useFastMode' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg declared_type='unsigned int' type='I' name='theTimeout' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg declared_type='NSFCacheMethod' type='i' name='cacheMethod' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg declared_type='NSUInteger' type='I' name='numberOfPages' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg declared_type='NSFEncodingType' type='i' name='theEncodingType' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg declared_type='NSFJournalModeMode' type='i' name='theMode' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg declared_type='NSUInteger' type='I' name='numberOfBytes' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg declared_type='NSFSynchronousMode' type='i' name='theSynchronousMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg declared_type='NSFTempStoreMode' type='i' name='theTempStoreMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addPredicate:withOperator:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<arg declared_type='NSFOperator' type='i' name='theOperator' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='arrayDescription'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_NSObjectToJSONString:error:'>
<arg declared_type='id' type='@' name='object' index='0'/>
<arg declared_type='NSError**' type='^@' name='error' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_safeArrayFromArray:'>
<arg declared_type='NSArray*' type='@' name='array' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='_safeDictionaryFromDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='dictionary' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='_safeObjectFromObject:'>
<arg declared_type='id' type='@' name='object' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_setOriginalClassString:'>
<arg declared_type='NSString*' type='@' name='theClassString' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='otherDictionary' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='theKey' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg declared_type='NSFNanoObject*' type='@' name='otherNanoObject' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='theKey' index='1'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg declared_type='NSArray*' type='@' name='keyArray' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setObject:forKey:'>
<arg declared_type='id' type='@' name='anObject' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='store' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' type='i' name='theType' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='theMatch' index='1'/>
<arg declared_type='id' type='@' name='theValue' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' type='i' name='theType' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='theMatch' index='1'/>
<arg declared_type='id' type='@' name='theValue' index='2'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg declared_type='NSUInteger' type='I' name='theIndex' index='0'/>
<arg declared_type='NSString*' type='@' name='theColumn' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg declared_type='NSString*' type='@' name='theColumn' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSString*' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSString*' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<arg declared_type='NSFReturnType' type='i' name='returnedObjectType' index='4'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg declared_type='NSString*' type='@' name='keyPath' index='0'/>
<arg declared_type='id' type='@' name='value' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg declared_type='NSArray*' type='@' name='someExpressions' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='id' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg declared_type='NSArray*' type='@' name='someKeys' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg declared_type='id' type='@' name='anAttributeValue' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='1'/>
<arg declared_type='id' type='@' name='aValue' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg declared_type='NSString*' type='@' name='aColumn' index='0'/>
<arg declared_type='id' type='@' name='aValue' index='1'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg declared_type='NSArray*' type='@' name='strings' index='0'/>
<arg declared_type='NSString*' type='@' name='delimiter' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg declared_type='NSFDateMatchType' type='i' name='aDateMatch' index='0'/>
<arg declared_type='NSDate*' type='@' name='aDate' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg declared_type='NSFAggregateFunctionType' type='i' name='theFunctionType' index='0'/>
<arg declared_type='NSString*' type='@' name='theAttribute' index='1'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='theNanoStore' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='limit'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='offset'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg declared_type='NSFDateMatchType' type='i' name='theDateMatch' index='0'/>
<arg declared_type='NSDate*' type='@' name='theDate' index='1'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='theNanoStore' index='0'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg declared_type='NSString*' type='@' name='attribute' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg declared_type='NSArray*' type='@' name='attributesToBeReturned' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBag:'>
<arg declared_type='NSFNanoBag*' type='@' name='bag' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg declared_type='NSArray*' type='@' name='expressions' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg declared_type='NSString*' type='@' name='filterClass' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg declared_type='BOOL' type='B' name='groupValues' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' type='@' name='key' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLimit:'>
<arg declared_type='NSUInteger' type='I' name='limit' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg declared_type='NSFMatchType' type='i' name='match' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='nanoStore' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg declared_type='NSUInteger' type='I' name='offset' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg declared_type='NSArray*' type='@' name='sort' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' type='@' name='value' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg declared_type='NSString*' type='@' name='theAttribute' index='0'/>
<arg declared_type='BOOL' type='B' name='ascending' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg declared_type='NSString*' type='@' name='theAttribute' index='0'/>
<arg declared_type='BOOL' type='B' name='ascending' index='1'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='JSONDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_NSFDatatypeOfObject:'>
<arg declared_type='id' type='@' name='value' index='0'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg declared_type='NSArray*' type='@' name='someObjects' index='0'/>
<arg declared_type='NSArray*' type='@' name='someKeys' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg declared_type='NSArray*' type='@' name='someObjects' index='0'/>
<arg declared_type='BOOL' type='B' name='forceSave' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' type='@' name='aPath' index='0'/>
<arg declared_type='NSString*' type='@' name='anExtension' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' type='@' name='aPath' index='0'/>
<arg declared_type='NSString*' type='@' name='anExtension' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg declared_type='id' type='@' name='aValue' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSInteger' type='i' name='aParamNumber' index='2'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' name='aStatement' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg declared_type='NSDate*' type='@' name='aDate' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' name='aStatement' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg declared_type='id' type='@' name='someObject' index='0'/>
<arg declared_type='NSMutableArray**' type='^@' name='aKeyPath' index='1'/>
<arg declared_type='NSMutableArray**' type='^@' name='someKeys' index='2'/>
<arg declared_type='NSMutableArray**' type='^@' name='someValues' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg declared_type='NSDictionary*' type='@' name='info' index='0'/>
<arg declared_type='NSMutableArray**' type='^@' name='flattenedKeys' index='1'/>
<arg declared_type='NSMutableArray**' type='^@' name='flattenedValues' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' type='@' name='prefixedSpace' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}' name='aStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='aSQLQuery' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg declared_type='BOOL' type='B' name='value' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:error:'>
<arg declared_type='NSDictionary*' type='@' name='someInfo' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSString*' type='@' name='classType' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg declared_type='id' type='@' name='aValue' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg declared_type='NSString*' type='@' name='theKey' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithName:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryDescription'>
<retval declared_type='NSFOrderedDictionary*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<arg declared_type='NSArray*' type='@' name='theSortDescriptors' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<arg declared_type='BOOL' type='B' name='shouldCompact' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg declared_type='NSFEngineProcessingMode' type='i' name='nanoEngineProcessingMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg declared_type='NSFNanoEngine*' type='@' name='nanoStoreEngine' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSUInteger' type='I' name='saveInterval' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFOrderedDictionary'>
<method selector='insertObject:forKey:atIndex:'>
<arg declared_type='id' type='@' name='anObject' index='0'/>
<arg declared_type='id' type='@' name='aKey' index='1'/>
<arg declared_type='NSUInteger' type='I' name='anIndex' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='keyAtIndex:'>
<arg declared_type='NSUInteger' type='I' name='anIndex' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='reverseKeyEnumerator'>
<retval declared_type='NSEnumerator*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' type='@' name='fileURL' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSError**' type='^@' name='error' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' type='@' name='fileURL' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='3'/>
<arg declared_type='NSError**' type='^@' name='error' index='4'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' type='@' name='headers' index='0'/>
<arg declared_type='NSData*' type='@' name='body' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' type='@' name='inputStream' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='unsigned long long' type='Q' name='length' index='3'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='ddLogLevel'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='ddSetLogLevel:'>
<arg declared_type='int' type='i' name='logLevel' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didAddToLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didArchiveLogFile:'>
<arg declared_type='NSString*' type='@' name='logFilePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:'>
<arg declared_type='NSString*' type='@' name='logFilePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:'>
<arg declared_type='DDLogMessage*' type='@' name='logMessage' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSFNanoStore*' type='@' name='theStore' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:'>
<arg declared_type='DDLogMessage*' type='@' name='logMessage' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg declared_type='id' type='@' name='formatter' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLogFiles:'>
<arg declared_type='NSUInteger' type='I' name='maximumNumberOfLogFiles' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' type='I' name='numberOfBytes' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='delay' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='willRemoveFromLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<arg declared_type='UIImage*' type='@' name='placeholderImage' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' type='@' name='urlRequest' index='0'/>
<arg declared_type='UIImage*' type='@' name='placeholderImage' index='1'/>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' type='@?' name='success' index='2'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg function_pointer='true' declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' type='@?' name='failure' index='3'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFMultipartFormData'>
<method type='v24@0:4@8@12@16@20' selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B20@0:4@8@12^@16' selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' type='@' name='fileURL' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSError**' type='^@' name='error' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B28@0:4@8@12@16@20^@24' selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' type='@' name='fileURL' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='3'/>
<arg declared_type='NSError**' type='^@' name='error' index='4'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' type='@' name='headers' index='0'/>
<arg declared_type='NSData*' type='@' name='body' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v32@0:4@8@12@16Q20@28' selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' type='@' name='inputStream' index='0'/>
<arg declared_type='NSString*' type='@' name='name' index='1'/>
<arg declared_type='NSString*' type='@' name='fileName' index='2'/>
<arg declared_type='unsigned long long' type='Q' name='length' index='3'/>
<arg declared_type='NSString*' type='@' name='mimeType' index='4'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4I8d12' selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' type='I' name='numberOfBytes' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='delay' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFileManager'>
<method type='@8@0:4' selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='didArchiveLogFile:'>
<arg declared_type='NSString*' type='@' name='logFilePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didRollAndArchiveLogFile:'>
<arg declared_type='NSString*' type='@' name='logFilePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='I8@0:4' selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='v12@0:4I8' selector='setMaximumNumberOfLogFiles:'>
<arg declared_type='NSUInteger' type='I' name='maximumNumberOfLogFiles' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFormatter'>
<method type='v12@0:4@8' selector='didAddToLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@12@0:4@8' selector='formatLogMessage:'>
<arg declared_type='DDLogMessage*' type='@' name='logMessage' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='willRemoveFromLogger:'>
<arg declared_type='id' type='@' name='logger' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogger'>
<method type='v8@0:4' selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' selector='logMessage:'>
<arg declared_type='DDLogMessage*' type='@' name='logMessage' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method type='v12@0:4@8' selector='setLogFormatter:'>
<arg declared_type='id' type='@' name='formatter' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDRegisteredDynamicLogging'>
<method type='i8@0:4' class_method='true' selector='ddLogLevel'>
<retval declared_type='int' type='i'/>
</method>
<method type='v12@0:4i8' class_method='true' selector='ddSetLogLevel:'>
<arg declared_type='int' type='i' name='logLevel' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='NSFNanoObjectProtocol'>
<method type='@20@0:4@8@12@16' selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSFNanoStore*' type='@' name='theStore' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
